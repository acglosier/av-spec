openapi: 3.0.0
info:
  version: 1.0.0
  title: AV HTTP 1.1
  description: |
    HTTP protocol is supported by all Arecont Vision cameras and is supported by almost all third party software systems or plug-ins that support standard IP video over HTTP. Developers would find it easy and quick to locate technical resources to help integrate Arecont cameras using HTTP protocol. Camera performance in terms of frame rate is somewhat slower via HTTP than via TFTP but is comparable to other multi-megapixel products available on the market.
  contact:
    name: AV Support
    email: support@arecontvision.com
    url: support.arecontvision.com
servers:
  - url: 'http://<camera IP address>'
tags:
  - name: JPEG/MJPEG
    description: Pull JPEG images individually or full MJPEG streams.
  - name: h.264 Streaming
    description: |
      Pull h.264 quality images individually or full video stream.
  - name: Multisensor Camera Streaming
    description: Get images or video from a sensor belonging to a multisensor camera.
  - name: Configuration
    description: Get and set camera configuration
  - name: Audio
    description: Get and set audio configuration
paths:
  /mjpeg:
    get:
      summary: Get an MJPEG Stream
      tags:
        - JPEG/MJPEG
      description: |
        open a continuous mjpeg stream from the camera
      operationId: mjpeg
      parameters:
        - $ref: '#/components/parameters/res'
        - $ref: '#/components/parameters/x0'
        - $ref: '#/components/parameters/y0'
        - $ref: '#/components/parameters/x1'
        - $ref: '#/components/parameters/y1'
        - $ref: '#/components/parameters/doublescan'
        - $ref: '#/components/parameters/fps'
        - name: quality
          in: query
          description: The compression quality of the jpeg image
          schema:
            type: integer
            minimum: 1
            maximum: 21
        - $ref: '#/components/parameters/ver'
        - name: channel
          in: query
          description: |
            Request down-scaled images. Because you preset downscaled image settings (through the UI or the /set endpoint), this parameter does not require size information.
          schema:
            type: string
            enum: [scaled]
        - $ref: '#/components/parameters/sd'
      responses:
        '200':
          description: Returns a stream
          content:
            multipart/x-mixed-replace; boundary=fbdr:
              schema:
                type: string
                enum:
                  - '--fbdr'
                example: |
                  --fbdr/r/
  /image:
    get:
      summary: Get a JPEG Frame
      tags:
        - JPEG/MJPEG
      description: Pull JPEG frames individually from the camera.
      operationId: jpeg
      parameters:
        - $ref: '#/components/parameters/res'
        - $ref: '#/components/parameters/x0'
        - $ref: '#/components/parameters/y0'
        - $ref: '#/components/parameters/x1'
        - $ref: '#/components/parameters/y1'
        - $ref: '#/components/parameters/doublescan'
        - name: quality
          in: query
          description: The compression quality of the jpeg image
          schema:
            type: integer
            minimum: 1
            maximum: 21
        - name: ID
          in: query
          description: |
            Ignored by the camera, but you might set random IDs to force browsers to refresh a frame. Some browsers might display a cached image if a previous URL is reused without modifying the ID field
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Returns an image
          content:
            multipart/x-mixed-replace; boundary=fbdr:
              schema:
                type: string
                enum:
                  - '--fbdr'
                example: '--fbdr/r/n'
  /mjpeg{channel}:
    parameters:
      - name: channel
        description: The ID of the channel you want to return information for. If you do not specify the channel, the camera will transmit the next available image from any of the enabled channels.
        in: path
        required: true
        schema:
          type: integer
          minimum: 1
          maximum: 4
    get:
      summary: Get an MJPEG Stream
      tags:
        - Multisensor Camera Streaming
      description: |
        open a continuous mjpeg stream from a sensor belonging to a multisensor camera.
      operationId: multimjpeg
      parameters:
        - $ref: '#/components/parameters/res'
        - $ref: '#/components/parameters/x0'
        - $ref: '#/components/parameters/y0'
        - $ref: '#/components/parameters/x1'
        - $ref: '#/components/parameters/y1'
        - $ref: '#/components/parameters/doublescan'
        - $ref: '#/components/parameters/fps'
        - name: quality
          in: query
          description: The compression quality of the jpeg image
          schema:
            type: integer
            minimum: 1
            maximum: 21
        - $ref: '#/components/parameters/ver'
        - name: channel
          in: query
          description: |
            Request down-scaled images. Because you preset downscaled image settings (through the UI or the /set endpoint), this parameter does not require size information.
          schema:
            type: string
            enum: [scaled]
        - $ref: "#/components/parameters/ssn"
        - name: ID
          in: query
          description: |
            Ignored by the camera, but you might set random IDs to force browsers to refresh a frame. Some browsers might display a cached image if a previous URL is reused without modifying the ID field
          schema:
            type: integer
            minimum: 1
        - $ref: '#/components/parameters/sd'
      responses:
        '200':
          description: Returns a stream
          content:
            multipart/x-mixed-replace; boundary=fbdr:
              schema:
                type: string
                enum:
                  - '--fbdr'
                example: |
                  --fbdr/r/
  /image{channel}:
    parameters:
      - name: channel
        description: The ID of the channel you want to return information for. If you do not specify the channel, the camera will transmit the next available image from any of the enabled channels.
        in: path
        required: true
        schema:
          type: integer
          minimum: 1
          maximum: 4
    get:
      summary: Get a JPEG Frame
      tags:
        - Multisensor Camera Streaming
      description: Pull JPEG frames individually from the camera.
      operationId: multijpeg
      parameters:
        - $ref: '#/components/parameters/res'
        - $ref: '#/components/parameters/x0'
        - $ref: '#/components/parameters/y0'
        - $ref: '#/components/parameters/x1'
        - $ref: '#/components/parameters/y1'
        - $ref: '#/components/parameters/doublescan'
        - name: quality
          in: query
          description: The compression quality of the jpeg image
          schema:
            type: integer
            minimum: 1
            maximum: 21
        - name: ID
          in: query
          description: |
            Ignored by the camera, but you might set random IDs to force browsers to refresh a frame. Some browsers might display a cached image if a previous URL is reused without modifying the ID field
          schema:
            type: integer
            minimum: 1
        - $ref: "#/components/parameters/ssn"
      responses:
        '200':
          description: Returns an image
          content:
            multipart/x-mixed-replace; boundary=fbdr:
              schema:
                type: string
                enum:
                  - '--fbdr'
                example: '--fbdr/r/n'
  /h264:
    get:
      tags:
        - h.264 Streaming
      summary: Pull an H.264 Frame
      description: |
        Pull H.264 frames from cameras. The first frame or the stream is always an IDR (Intra) frame followed by multiple P (Inter) frames. The default number of P-frames is 50, and can be modified via register 3:21 using one of the following HTTP commands —

        http://camera_ip/set?keyframeinterval=(0..100)
        http://camera_ip/setreg?page=3&reg=21&val=(number of P-frames)

        You can get your current P-frame setting from http://camera_ip/getreg?page=3&reg=21 
      parameters:
        - $ref: '#/components/parameters/res'
        - $ref: '#/components/parameters/x0'
        - $ref: '#/components/parameters/y0'
        - $ref: '#/components/parameters/x1'
        - $ref: '#/components/parameters/y1'
        - $ref: '#/components/parameters/qp'
        - $ref: '#/components/parameters/doublescan'
        - $ref: '#/components/parameters/ssn'
        - $ref: '#/components/parameters/iframe'
        - $ref: '#/components/parameters/bitrate'
        - $ref: '#/components/parameters/intra_period'
      responses:
        '200':
          description: |
            Returns a stream according to the parameters in your request.

            Each frame sent by the camera may contain multiple zero bytes at the end. A Unit Delimiter (UD) is not used. Although this does not contradict the ITU-T H.264 standard (ISO/IEC 14496-10), some decoders may delay decoded frames by one due to the absence of the UD. If this presents a problem, replace all zero bytes at the end with the UD, a sequence of the following five bytes — `0x00 0x00 0x01 0x09 0x10`. The number of zero bytes at the end of a frame may be significant (up to a few hundred bytes). Replacing them with the UD will also reduce the stream size
          content:
            multipart/x-mixed-replace; boundary=fbdr:
              schema:
                type: string
                enum:
                  - '--fbdr'
                example: '--fbdr/r/n'
  /h264stream:
    get:
      summary: Pull an H.264 Video Stream
      tags:
        - h.264 Streaming
      description: |
        Pull a continuous H.264 video stream with boundary-separated frames.
      parameters:
        - $ref: '#/components/parameters/res'
        - $ref: '#/components/parameters/x0'
        - $ref: '#/components/parameters/y0'
        - $ref: '#/components/parameters/x1'
        - $ref: '#/components/parameters/y1'
        - $ref: '#/components/parameters/qp'
        - $ref: '#/components/parameters/doublescan'
        - $ref: '#/components/parameters/ssn'
        - $ref: '#/components/parameters/bitrate'
        - $ref: '#/components/parameters/fps'
        - $ref: '#/components/parameters/ver'
        - name: channel
          in: query
          description: |
            Request down-scaled images. Because you preset downscaled image settings (through the UI or the /set endpoint), this parameter does not require size information.
          schema:
            type: string
            enum: [scaled]
        - $ref: '#/components/parameters/sd'
      responses:
        '200':
          description: |
            Returns a stream according to the parameters in your request.
          content:
            multipart/x-mixed-replace; boundary=fbdr:
              schema:
                type: string
                enum:
                  - '--fbdr'
                example: '--fbdr/r/n'
  /get{channel}:
    parameters:
      - name: channel
        description: The ID of the channel you want to get or set information for.
        in: path
        required: true
        schema:
          type: integer
          minimum: 1
          maximum: 4
    get:
      tags:
        - Configuration
      summary: Get Multisensor Camera Settings
      description: |
        Return settings for a single channel in a multi-sensor camera. In general, you should use only one query parameter at a time.
      parameters:
        - $ref: '#/components/parameters/brightness'
        - $ref: '#/components/parameters/sharpness'
        - $ref: '#/components/parameters/saturation'
        - $ref: '#/components/parameters/blue'
        - $ref: '#/components/parameters/red'
        - $ref: '#/components/parameters/illum'
        - $ref: '#/components/parameters/freq'
        - $ref: '#/components/parameters/lowlight'
        - $ref: '#/components/parameters/shortexposures'
        - $ref: '#/components/parameters/autoexp'
        - $ref: '#/components/parameters/exposure'
        - $ref: '#/components/parameters/kneepoint'
        - $ref: '#/components/parameters/analoggain'
        - $ref: '#/components/parameters/maxkneegain'
        - $ref: '#/components/parameters/maxexptime'
        - $ref: '#/components/parameters/maxdigitalgain'
        - $ref: '#/components/parameters/mdmode'
        - $ref: '#/components/parameters/motiondetect'
        - $ref: '#/components/parameters/mdtotalzones'
        - $ref: '#/components/parameters/mdlevelthreshold'
        - $ref: '#/components/parameters/mddetail'
        - $ref: '#/components/parameters/mdprivacymask'
        - $ref: '#/components/parameters/mdresult'
        - $ref: '#/components/parameters/pmask'
        - $ref: '#/components/parameters/pmaskleft'
        - $ref: '#/components/parameters/pmasktop'
        - $ref: '#/components/parameters/pmaskright'
        - $ref: '#/components/parameters/pmaskbottom'
        - $ref: '#/components/parameters/streamip'
        - $ref: '#/components/parameters/rtpport'
        - $ref: '#/components/parameters/sapip'
        - $ref: '#/components/parameters/vertical_shift'
        - $ref: '#/components/parameters/pan'
        - $ref: '#/components/parameters/tilt'
        - $ref: '#/components/parameters/zoom'
        - $ref: '#/components/parameters/ptz'
        - $ref: '#/components/parameters/switcher'
      responses:
        '200':
          description: Returns the parameters specified in the query.
          content:
            text/plain:
              schema:
                type: object
                properties:
                  brightness:
                    $ref: '#/components/schemas/brightness'
                  sharpness:
                    $ref: '#/components/schemas/sharpness'
                  saturation:
                    $ref: '#/components/schemas/saturation'
                  blue:
                    $ref: '#/components/schemas/blue'
                  red:
                    $ref: '#/components/schemas/red'
                  illum:
                    $ref: '#/components/schemas/illum'
                  freq:
                    $ref: '#/components/schemas/freq'
                  lowlight:
                    $ref: '#/components/schemas/lowlight'
                  shortexposures:
                    $ref: '#/components/schemas/shortexposures'
                  autoexp:
                    $ref: '#/components/schemas/autoexp'
                  exposure:
                    $ref: '#/components/schemas/exposure'
                  kneepoint:
                    $ref: '#/components/schemas/kneepoint'
                  analoggain:
                    $ref: '#/components/schemas/analoggain'
                  maxkneegain:
                    $ref: '#/components/schemas/maxkneegain'
                  maxexptime:
                    $ref: '#/components/schemas/maxexptime'
                  maxdigitalgain:
                    $ref: '#/components/schemas/maxdigitalgain'
                  mdmode:
                    $ref: '#/components/schemas/mdmode'
                  motiondetect:
                    $ref: '#/components/schemas/motiondetect'
                  mdtotalzones:
                    $ref: '#/components/schemas/mdtotalzones'
                  mdlevelthreshold:
                    $ref: '#/components/schemas/mdlevelthreshold'
                  mddetail:
                    $ref: '#/components/schemas/mddetail'
                  mdprivacymask:
                    $ref: '#/components/schemas/mdprivacymask'
                  mdresult:
                    $ref: '#/components/schemas/mdresult'
                  pmask:
                    $ref: '#/components/schemas/pmask'
                  pmaskleft:
                    $ref: '#/components/schemas/pmaskleft'
                  pmasktop:
                    $ref: '#/components/schemas/pmasktop'
                  pmaskright:
                    $ref: '#/components/schemas/pmaskright'
                  pmaskbottom:
                    $ref: '#/components/schemas/pmaskbottom'
                  streamip:
                    $ref: '#/components/schemas/streamip'
                  rtpport:
                    $ref: '#/components/schemas/rtpport'
                  sapip:
                    $ref: '#/components/schemas/sapip'
                  vertical_shift:
                    $ref: '#/components/schemas/vertical_shift'
    post:
      tags:
        - Configuration
      summary: Set Multisensor Camera Settings
      description: |
        Set parameters for a single channel in a multi-sensor camera. In general, you should use only one query parameter at a time.
      parameters:
        - $ref: '#/components/parameters/brightness'
        - $ref: '#/components/parameters/sharpness'
        - $ref: '#/components/parameters/saturation'
        - $ref: '#/components/parameters/blue'
        - $ref: '#/components/parameters/red'
        - $ref: '#/components/parameters/illum'
        - $ref: '#/components/parameters/freq'
        - $ref: '#/components/parameters/lowlight'
        - $ref: '#/components/parameters/shortexposures'
        - $ref: '#/components/parameters/autoexp'
        - $ref: '#/components/parameters/exposure'
        - $ref: '#/components/parameters/kneepoint'
        - $ref: '#/components/parameters/analoggain'
        - $ref: '#/components/parameters/maxkneegain'
        - $ref: '#/components/parameters/maxexptime'
        - $ref: '#/components/parameters/maxdigitalgain'
        - $ref: '#/components/parameters/mdmode'
        - $ref: '#/components/parameters/motiondetect'
        - $ref: '#/components/parameters/mdtotalzones'
        - $ref: '#/components/parameters/mdlevelthreshold'
        - $ref: '#/components/parameters/mddetail'
        - $ref: '#/components/parameters/mdprivacymask'
        - $ref: '#/components/parameters/mdresult'
        - $ref: '#/components/parameters/pmask'
        - $ref: '#/components/parameters/pmaskleft'
        - $ref: '#/components/parameters/pmasktop'
        - $ref: '#/components/parameters/pmaskright'
        - $ref: '#/components/parameters/pmaskbottom'
        - $ref: '#/components/parameters/streamip'
        - $ref: '#/components/parameters/rtpport'
        - $ref: '#/components/parameters/sapip'
        - $ref: '#/components/parameters/vertical_shift'
        - $ref: '#/components/parameters/pan'
        - $ref: '#/components/parameters/tilt'
        - $ref: '#/components/parameters/zoom'
        - $ref: '#/components/parameters/ptz'
      responses:
        '200':
          description: Returns the parameters specified in the query.
          content:
            text/plain:
              schema:
                type: object
                properties:
                  brightness:
                    $ref: '#/components/schemas/brightness'
                  sharpness:
                    $ref: '#/components/schemas/sharpness'
                  saturation:
                    $ref: '#/components/schemas/saturation'
                  blue:
                    $ref: '#/components/schemas/blue'
                  red:
                    $ref: '#/components/schemas/red'
                  illum:
                    $ref: '#/components/schemas/illum'
                  freq:
                    $ref: '#/components/schemas/freq'
                  lowlight:
                    $ref: '#/components/schemas/lowlight'
                  shortexposures:
                    $ref: '#/components/schemas/shortexposures'
                  autoexp:
                    $ref: '#/components/schemas/autoexp'
                  exposure:
                    $ref: '#/components/schemas/exposure'
                  kneepoint:
                    $ref: '#/components/schemas/kneepoint'
                  analoggain:
                    $ref: '#/components/schemas/analoggain'
                  maxkneegain:
                    $ref: '#/components/schemas/maxkneegain'
                  maxexptime:
                    $ref: '#/components/schemas/maxexptime'
                  maxdigitalgain:
                    $ref: '#/components/schemas/maxdigitalgain'
                  mdmode:
                    $ref: '#/components/schemas/mdmode'
                  motiondetect:
                    $ref: '#/components/schemas/motiondetect'
                  mdtotalzones:
                    $ref: '#/components/schemas/mdtotalzones'
                  mdlevelthreshold:
                    $ref: '#/components/schemas/mdlevelthreshold'
                  mddetail:
                    $ref: '#/components/schemas/mddetail'
                  mdprivacymask:
                    $ref: '#/components/schemas/mdprivacymask'
                  mdresult:
                    $ref: '#/components/schemas/mdresult'
                  pmask:
                    $ref: '#/components/schemas/pmask'
                  pmaskleft:
                    $ref: '#/components/schemas/pmaskleft'
                  pmasktop:
                    $ref: '#/components/schemas/pmasktop'
                  pmaskright:
                    $ref: '#/components/schemas/pmaskright'
                  pmaskbottom:
                    $ref: '#/components/schemas/pmaskbottom'
                  streamip:
                    $ref: '#/components/schemas/streamip'
                  rtpport:
                    $ref: '#/components/schemas/rtpport'
                  sapip:
                    $ref: '#/components/schemas/sapip'
                  vertical_shift:
                    $ref: '#/components/schemas/vertical_shift'
  /get:
    get:
      tags:
        - Configuration
      summary: Get Camera Settings
      description: |
        Return settings from the camera. In general, you should use only one of the following parameters at a time.
      parameters:
        - $ref: '#/components/parameters/day_binning'
        - $ref: '#/components/parameters/night_binning'
        - $ref: '#/components/parameters/daynight'
        - $ref: '#/components/parameters/upscaling'
        - $ref: '#/components/parameters/channelenable'
        - $ref: '#/components/parameters/brightness'
        - $ref: '#/components/parameters/sharpness'
        - $ref: '#/components/parameters/saturation'
        - $ref: '#/components/parameters/blue'
        - $ref: '#/components/parameters/red'
        - $ref: '#/components/parameters/illum'
        - $ref: '#/components/parameters/freq'
        - $ref: '#/components/parameters/lowlight'
        - $ref: '#/components/parameters/shortexposures'
        - $ref: '#/components/parameters/autoexp'
        - $ref: '#/components/parameters/exposure'
        - $ref: '#/components/parameters/expwndleft'
        - $ref: '#/components/parameters/expwndtop'
        - $ref: '#/components/parameters/expwndwidth'
        - $ref: '#/components/parameters/expwndheight'
        - $ref: '#/components/parameters/sensorleft'
        - $ref: '#/components/parameters/sensortop'
        - $ref: '#/components/parameters/sensorwidth'
        - $ref: '#/components/parameters/sensorheight'
        - $ref: '#/components/parameters/imgleft'
        - $ref: '#/components/parameters/imgtop'
        - $ref: '#/components/parameters/imgwidth'
        - $ref: '#/components/parameters/imgheight'
        - $ref: '#/components/parameters/imgquality'
        - $ref: '#/components/parameters/imgres'
        - $ref: '#/components/parameters/mac'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/fwversion'
        - $ref: '#/components/parameters/procversion'
        - $ref: '#/components/parameters/netversion'
        - $ref: '#/components/parameters/revision'
        - $ref: '#/components/parameters/kneepoint'
        - $ref: '#/components/parameters/analoggain'
        - $ref: '#/components/parameters/maxkneegain'
        - $ref: '#/components/parameters/maxexptime'
        - $ref: '#/components/parameters/maxdigitalgain'
        - $ref: '#/components/parameters/webserverport'
        - $ref: '#/components/parameters/admin'
        - $ref: '#/components/parameters/viewer'
        - $ref: '#/components/parameters/maxsensorwidth'
        - $ref: '#/components/parameters/maxsensorheight'
        - $ref: '#/components/parameters/mdmode'
        - $ref: '#/components/parameters/motiondetect'
        - $ref: '#/components/parameters/mdtotalzones'
        - $ref: '#/components/parameters/auxin'
        - $ref: '#/components/parameters/auxout'
        - $ref: '#/components/parameters/cropping'
        - $ref: '#/components/parameters/1080p_mode'
        - $ref: '#/components/parameters/pmask'
        - $ref: '#/components/parameters/focus'
        - $ref: '#/components/parameters/zoom'
        - $ref: '#/components/parameters/focusleft'
        - $ref: '#/components/parameters/focustop'
        - $ref: '#/components/parameters/focusright'
        - $ref: '#/components/parameters/focusbottom'
        - $ref: '#/components/parameters/focuswindow'
        - $ref: '#/components/parameters/af_dn'
        - $ref: '#/components/parameters/af_zoom'
        - $ref: '#/components/parameters/casino_mode'
        - $ref: '#/components/parameters/netopt'
        - $ref: '#/components/parameters/multicast_rec'
        - $ref: '#/components/parameters/en_multicast'
        - $ref: '#/components/parameters/fps'
        - $ref: '#/components/parameters/qp'
        - $ref: '#/components/parameters/qp_max'
        - $ref: '#/components/parameters/ratelimit_mode'
        - $ref: '#/components/parameters/ratelimit'
        - $ref: '#/components/parameters/bitrate'
        - $ref: '#/components/parameters/keyframeinterval'
        - $ref: '#/components/parameters/rtspport'
        - $ref: '#/components/parameters/spacialfilter'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/mtu'
        - $ref: '#/components/parameters/ip'
        - $ref: '#/components/parameters/subnetmask'
        - $ref: '#/components/parameters/gateway'
        - $ref: '#/components/parameters/eth_negotiation'
        - $ref: '#/components/parameters/features'
        - $ref: '#/components/parameters/audioinput'
        - $ref: '#/components/parameters/linein_volume'
        - $ref: '#/components/parameters/mic_boost'
        - $ref: '#/components/parameters/piris'
        - $ref: '#/components/parameters/pirispos'
        - $ref: '#/components/parameters/ir'
        - $ref: '#/components/parameters/make'
        - $ref: '#/components/parameters/white_balance'
        - $ref: '#/components/parameters/wbwndctrl'
        - $ref: '#/components/parameters/wbwndleft'
        - $ref: '#/components/parameters/wbwndtop'
        - $ref: '#/components/parameters/wbwndwidth'
        - $ref: '#/components/parameters/wbwndheight'
        - $ref: '#/components/parameters/ntpserver_ip'
        - $ref: '#/components/parameters/enclosure'
        - $ref: '#/components/parameters/gamma'
        - $ref: '#/components/parameters/gamma2'
        - $ref: '#/components/parameters/bandwidthsaving'
        - $ref: '#/components/parameters/lowpower'
        - $ref: '#/components/parameters/motion_compensation'
        - $ref: '#/components/parameters/adjustable_ir'
        - $ref: '#/components/parameters/irwidepos'
        - $ref: '#/components/parameters/irtelepos'
        - $ref: '#/components/parameters/irpos_chan1'
        - $ref: '#/components/parameters/irpos_chan2'
        - $ref: '#/components/parameters/snapstream'
        - $ref: '#/components/parameters/sensorcount'
        - $ref: '#/components/parameters/scaling'
        - $ref: '#/components/parameters/scaling_size'
        - $ref: '#/components/parameters/sd_codec'
        - $ref: '#/components/parameters/sd_fps'
        - $ref: '#/components/parameters/sd_recording'
        - $ref: '#/components/parameters/sd_networkfail'
        - $ref: '#/components/parameters/sd_motionalarm'
        - $ref: '#/components/parameters/sd_ioalarm'
        - $ref: '#/components/parameters/sd_stampspan'
        - $ref: '#/components/parameters/sd_imgleft'
        - $ref: '#/components/parameters/sd_imgright'
        - $ref: '#/components/parameters/sd_imgtop'
        - $ref: '#/components/parameters/sd_imgbottom'
        - $ref: '#/components/parameters/sd_imgres'
        - $ref: '#/components/parameters/qos_enabled'
        - $ref: '#/components/parameters/qos_video'
        - $ref: '#/components/parameters/qos_default'
        - $ref: '#/components/parameters/ipv6enabled'
        - $ref: '#/components/parameters/ipv6address'
        - $ref: '#/components/parameters/ipv6prefixlen'
        - $ref: '#/components/parameters/ipv6dhcp'
        - $ref: '#/components/parameters/ipv6addresstype'
        - $ref: '#/components/parameters/ipv6acceptrouters'
        - $ref: '#/components/parameters/equalbright'
        - $ref: '#/components/parameters/equalcolor'
        - $ref: '#/components/parameters/vertical_alignment'
        - $ref: '#/components/parameters/piris_ref_channel'
        - $ref: '#/components/parameters/exp_ref_channel'
        - $ref: '#/components/parameters/pan'
        - $ref: '#/components/parameters/tilt'
        - $ref: '#/components/parameters/ptz'
        - $ref: '#/components/parameters/switcher'
      responses:
        '200':
          description: Returns the parameters specified in the query.
          content:
            text/plain:
              schema:
                type: object
                properties:
                  enclosure:
                    $ref: '#/components/schemas/enclosure'
                  make:
                    $ref: '#/components/schemas/make'
                  mac:
                    $ref: '#/components/schemas/mac'
                  model:
                    $ref: '#/components/schemas/model'
                  fwversion:
                    $ref: '#/components/schemas/fwversion'
                  procversion:
                    $ref: '#/components/schemas/procversion'
                  netversion:
                    $ref: '#/components/schemas/netversion'
                  revision:
                    $ref: '#/components/schemas/revision'
                  day_binning:
                    $ref: '#/components/schemas/day_binning'
                  night_binning:
                    $ref: '#/components/schemas/night_binning'
                  daynight:
                    $ref: '#/components/schemas/daynight'
                  upscaling:
                    $ref: '#/components/schemas/upscaling'
                  channelenable:
                    $ref: '#/components/schemas/channelenable'
                  brightness:
                    $ref: '#/components/schemas/brightness'
                  sharpness:
                    $ref: '#/components/schemas/sharpness'
                  saturation:
                    $ref: '#/components/schemas/saturation'
                  blue:
                    $ref: '#/components/schemas/blue'
                  red:
                    $ref: '#/components/schemas/red'
                  illum:
                    $ref: '#/components/schemas/illum'
                  freq:
                    $ref: '#/components/schemas/freq'
                  lowlight:
                    $ref: '#/components/schemas/lowlight'
                  shortexposures:
                    $ref: '#/components/schemas/shortexposures'
                  autoexp:
                    $ref: '#/components/schemas/autoexp'
                  exposure:
                    $ref: '#/components/schemas/exposure'
                  expwndleft:
                    $ref: '#/components/schemas/expwndleft'
                  expwndtop:
                    $ref: '#/components/schemas/expwndtop'
                  expwndwidth:
                    $ref: '#/components/schemas/expwndwidth'
                  expwndheight:
                    $ref: '#/components/schemas/expwndheight'
                  sensorleft:
                    $ref: '#/components/schemas/sensorleft'
                  sensortop:
                    $ref: '#/components/schemas/sensortop'
                  sensorwidth:
                    $ref: '#/components/schemas/sensorwidth'
                  sensorheight:
                    $ref: '#/components/schemas/sensorheight'
                  imgleft:
                    $ref: '#/components/schemas/imgleft'
                  imgtop:
                    $ref: '#/components/schemas/imgtop'
                  imgwidth:
                    $ref: '#/components/schemas/imgwidth'
                  imgheight:
                    $ref: '#/components/schemas/imgheight'
                  imgquality:
                    $ref: '#/components/schemas/imgquality'
                  imgres:
                    $ref: '#/components/schemas/imgres'
                  kneepoint:
                    $ref: '#/components/schemas/kneepoint'
                  analoggain:
                    $ref: '#/components/schemas/analoggain'
                  maxkneegain:
                    $ref: '#/components/schemas/maxkneegain'
                  maxexptime:
                    $ref: '#/components/schemas/maxexptime'
                  maxdigitalgain:
                    $ref: '#/components/schemas/maxdigitalgain'
                  webserverport:
                    $ref: '#/components/schemas/webserverport'
                  admin:
                    $ref: '#/components/schemas/admin'
                  viewer:
                    $ref: '#/components/schemas/viewer'
                  maxsensorwidth:
                    $ref: '#/components/schemas/maxsensorwidth'
                  maxsensorheight:
                    $ref: '#/components/schemas/maxsensorheight'
                  mdmode:
                    $ref: '#/components/schemas/mdmode'
                  motiondetect:
                    $ref: '#/components/schemas/motiondetect'
                  mdtotalzones:
                    $ref: '#/components/schemas/mdtotalzones'
                  auxin:
                    $ref: '#/components/schemas/auxin'
                  auxout:
                    $ref: '#/components/schemas/auxout'
                  cropping:
                    $ref: '#/components/schemas/cropping'
                  1080p_mode:
                    $ref: '#/components/schemas/1080p_mode'
                  pmask:
                    $ref: '#/components/schemas/pmask'
                  focus:
                    $ref: '#/components/schemas/focus'
                  zoom:
                    $ref: '#/components/schemas/zoom'
                  focusleft:
                    $ref: '#/components/schemas/focusleft'
                  focustop:
                    $ref: '#/components/schemas/focustop'
                  focusright:
                    $ref: '#/components/schemas/focusright'
                  focusbottom:
                    $ref: '#/components/schemas/focusbottom'
                  focuswindow:
                    $ref: '#/components/schemas/focuswindow'
                  af_dn:
                    $ref: '#/components/schemas/af_dn'
                  af_zoom:
                    $ref: '#/components/schemas/af_zoom'
                  casino_mode:
                    $ref: '#/components/schemas/casino_mode'
                  netopt:
                    $ref: '#/components/schemas/netopt'
                  multicast_rec:
                    $ref: '#/components/schemas/multicast_rec'
                  en_multicast:
                    $ref: '#/components/schemas/en_multicast'
                  fps:
                    $ref: '#/components/schemas/fps'
                  qp:
                    $ref: '#/components/schemas/qp'
                  qp_max:
                    $ref: '#/components/schemas/qp_max'
                  ratelimit_mode:
                    $ref: '#/components/schemas/ratelimit_mode'
                  ratelimit:
                    $ref: '#/components/schemas/ratelimit'
                  bitrate:
                    $ref: '#/components/schemas/bitrate'
                  keyframeinterval:
                    $ref: '#/components/schemas/keyframeinterval'
                  rtspport:
                    $ref: '#/components/schemas/rtspport'
                  spacialfilter:
                    $ref: '#/components/schemas/spacialfilter'
                  name:
                    $ref: '#/components/schemas/name'
                  mtu:
                    $ref: '#/components/schemas/mtu'
                  ip:
                    $ref: '#/components/schemas/ip'
                  subnetmask:
                    $ref: '#/components/schemas/subnetmask'
                  gateway:
                    $ref: '#/components/schemas/gateway'
                  eth_negotiation:
                    $ref: '#/components/schemas/eth_negotiation'
                  features:
                    $ref: '#/components/schemas/features'
                  audioinput:
                    $ref: '#/components/schemas/audioinput'
                  linein_volume:
                    $ref: '#/components/schemas/linein_volume'
                  mic_boost:
                    $ref: '#/components/schemas/mic_boost'
                  piris:
                    $ref: '#/components/schemas/piris'
                  pirispos:
                    $ref: '#/components/schemas/pirispos'
                  ir:
                    $ref: '#/components/schemas/ir'
                  white_balance:
                    $ref: '#/components/schemas/white_balance'
                  wbwndctrl:
                    $ref: '#/components/schemas/wbwndctrl'
                  wbwndleft:
                    $ref: '#/components/schemas/wbwndleft'
                  wbwndtop:
                    $ref: '#/components/schemas/wbwndtop'
                  wbwndwidth:
                    $ref: '#/components/schemas/wbwndwidth'
                  wbwndheight:
                    $ref: '#/components/schemas/wbwndheight'
                  ntpserver_ip:
                    $ref: '#/components/schemas/ntpserver_ip'
                  gamma:
                    $ref: '#/components/schemas/gamma'
                  gamma2:
                    $ref: '#/components/schemas/gamma2'
                  bandwidthsaving:
                    $ref: '#/components/schemas/bandwidthsaving'
                  lowpower:
                    $ref: '#/components/schemas/lowpower'
                  motion_compensation:
                    $ref: '#/components/schemas/motion_compensation'
                  adjustable_ir:
                    $ref: '#/components/schemas/adjustable_ir'
                  irwidepos:
                    $ref: '#/components/schemas/irwidepos'
                  irtelepos:
                    $ref: '#/components/schemas/irtelepos'
                  irpos_chan1:
                    $ref: '#/components/schemas/irpos_chan1'
                  irpos_chan2:
                    $ref: '#/components/schemas/irpos_chan2'
                  snapstream:
                    $ref: '#/components/schemas/snapstream'
                  sensorcount:
                    $ref: '#/components/schemas/sensorcount'
                  scaling:
                    $ref: '#/components/schemas/scaling'
                  scaling_size:
                    $ref: '#/components/schemas/scaling_size'
                  sd_codec:
                    $ref: '#/components/schemas/sd_codec'
                  sd_fps:
                    $ref: '#/components/schemas/sd_fps'
                  sd_recording:
                    $ref: '#/components/schemas/sd_recording'
                  sd_networkfail:
                    $ref: '#/components/schemas/sd_networkfail'
                  sd_motionalarm:
                    $ref: '#/components/schemas/sd_motionalarm'
                  sd_ioalarm:
                    $ref: '#/components/schemas/sd_ioalarm'
                  sd_stampspan:
                    $ref: '#/components/schemas/sd_stampspan'
                  sd_imgleft:
                    $ref: '#/components/schemas/sd_imgleft'
                  sd_imgright:
                    $ref: '#/components/schemas/sd_imgright'
                  sd_imgtop:
                    $ref: '#/components/schemas/sd_imgtop'
                  sd_imgbottom:
                    $ref: '#/components/schemas/sd_imgbottom'
                  sd_imgres:
                    $ref: '#/components/schemas/sd_imgres'
                  qos_enabled:
                    $ref: '#/components/schemas/qos_enabled'
                  qos_video:
                    $ref: '#/components/schemas/qos_video'
                  qos_default:
                    $ref: '#/components/schemas/qos_default'
                  ipv6enabled:
                    $ref: '#/components/schemas/ipv6enabled'
                  ipv6address:
                    $ref: '#/components/schemas/ipv6address'
                  ipv6prefixlen:
                    $ref: '#/components/schemas/ipv6prefixlen'
                  ipv6dhcp:
                    $ref: '#/components/schemas/ipv6dhcp'
                  ipv6addresstype:
                    $ref: '#/components/schemas/ipv6addresstype'
                  ipv6acceptrouters:
                    $ref: '#/components/schemas/ipv6acceptrouters'
                  equalbright:
                    $ref: '#/components/schemas/equalbright'
                  equalcolor:
                    $ref: '#/components/schemas/equalcolor'
                  vertical_alignment:
                    $ref: '#/components/schemas/vertical_alignment'
                  piris_ref_channel:
                    $ref: '#/components/schemas/piris_ref_channel'
                  exp_ref_channel:
                    $ref: '#/components/schemas/exp_ref_channel'
  /set:
    post:
      summary: Set Camera Settings
      tags:
        - Configuration
      description: Set camera settings.
      parameters:
        - $ref: '#/components/parameters/day_binning'
        - $ref: '#/components/parameters/night_binning'
        - $ref: '#/components/parameters/daynight'
        - $ref: '#/components/parameters/upscaling'
        - $ref: '#/components/parameters/channelenable'
        - $ref: '#/components/parameters/brightness'
        - $ref: '#/components/parameters/sharpness'
        - $ref: '#/components/parameters/saturation'
        - $ref: '#/components/parameters/blue'
        - $ref: '#/components/parameters/red'
        - $ref: '#/components/parameters/illum'
        - $ref: '#/components/parameters/freq'
        - $ref: '#/components/parameters/lowlight'
        - $ref: '#/components/parameters/shortexposures'
        - $ref: '#/components/parameters/autoexp'
        - $ref: '#/components/parameters/exposure'
        - $ref: '#/components/parameters/expwndleft'
        - $ref: '#/components/parameters/expwndtop'
        - $ref: '#/components/parameters/expwndwidth'
        - $ref: '#/components/parameters/expwndheight'
        - $ref: '#/components/parameters/sensorleft'
        - $ref: '#/components/parameters/sensortop'
        - $ref: '#/components/parameters/sensorwidth'
        - $ref: '#/components/parameters/sensorheight'
        - $ref: '#/components/parameters/imgleft'
        - $ref: '#/components/parameters/imgtop'
        - $ref: '#/components/parameters/imgwidth'
        - $ref: '#/components/parameters/imgheight'
        - $ref: '#/components/parameters/imgquality'
        - $ref: '#/components/parameters/imgres'
        - $ref: '#/components/parameters/kneepoint'
        - $ref: '#/components/parameters/analoggain'
        - $ref: '#/components/parameters/maxkneegain'
        - $ref: '#/components/parameters/maxexptime'
        - $ref: '#/components/parameters/maxdigitalgain'
        - $ref: '#/components/parameters/admin'
        - $ref: '#/components/parameters/viewer'
        - $ref: '#/components/parameters/maxsensorwidth'
        - $ref: '#/components/parameters/maxsensorheight'
        - $ref: '#/components/parameters/mdmode'
        - $ref: '#/components/parameters/motiondetect'
        - $ref: '#/components/parameters/mdtotalzones'
        - $ref: '#/components/parameters/auxin'
        - $ref: '#/components/parameters/auxout'
        - $ref: '#/components/parameters/cropping'
        - $ref: '#/components/parameters/1080p_mode'
        - $ref: '#/components/parameters/pmask'
        - $ref: '#/components/parameters/focus'
        - $ref: '#/components/parameters/zoom'
        - $ref: '#/components/parameters/focusleft'
        - $ref: '#/components/parameters/focustop'
        - $ref: '#/components/parameters/focusright'
        - $ref: '#/components/parameters/focusbottom'
        - $ref: '#/components/parameters/focuswindow'
        - $ref: '#/components/parameters/af_dn'
        - $ref: '#/components/parameters/af_zoom'
        - $ref: '#/components/parameters/casino_mode'
        - $ref: '#/components/parameters/netopt'
        - $ref: '#/components/parameters/multicast_rec'
        - $ref: '#/components/parameters/en_multicast'
        - $ref: '#/components/parameters/fps'
        - $ref: '#/components/parameters/qp'
        - $ref: '#/components/parameters/qp_max'
        - $ref: '#/components/parameters/ratelimit_mode'
        - $ref: '#/components/parameters/ratelimit'
        - $ref: '#/components/parameters/bitrate'
        - $ref: '#/components/parameters/keyframeinterval'
        - $ref: '#/components/parameters/rtspport'
        - $ref: '#/components/parameters/spacialfilter'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/mtu'
        - $ref: '#/components/parameters/ip'
        - $ref: '#/components/parameters/subnetmask'
        - $ref: '#/components/parameters/gateway'
        - $ref: '#/components/parameters/webserverport'
        - $ref: '#/components/parameters/eth_negotiation'
        - $ref: '#/components/parameters/features'
        - $ref: '#/components/parameters/audioinput'
        - $ref: '#/components/parameters/linein_volume'
        - $ref: '#/components/parameters/mic_boost'
        - $ref: '#/components/parameters/piris'
        - $ref: '#/components/parameters/pirispos'
        - $ref: '#/components/parameters/ir'
        - $ref: '#/components/parameters/white_balance'
        - $ref: '#/components/parameters/wbwndctrl'
        - $ref: '#/components/parameters/wbwndleft'
        - $ref: '#/components/parameters/wbwndtop'
        - $ref: '#/components/parameters/wbwndwidth'
        - $ref: '#/components/parameters/wbwndheight'
        - $ref: '#/components/parameters/ntpserver_ip'
        - $ref: '#/components/parameters/gamma'
        - $ref: '#/components/parameters/gamma2'
        - $ref: '#/components/parameters/bandwidthsaving'
        - $ref: '#/components/parameters/lowpower'
        - $ref: '#/components/parameters/motion_compensation'
        - $ref: '#/components/parameters/adjustable_ir'
        - $ref: '#/components/parameters/irwidepos'
        - $ref: '#/components/parameters/irtelepos'
        - $ref: '#/components/parameters/irpos_chan1'
        - $ref: '#/components/parameters/irpos_chan2'
        - $ref: '#/components/parameters/snapstream'
        - $ref: '#/components/parameters/sensorcount'
        - $ref: '#/components/parameters/scaling'
        - $ref: '#/components/parameters/scaling_size'
        - $ref: '#/components/parameters/sd_codec'
        - $ref: '#/components/parameters/sd_fps'
        - $ref: '#/components/parameters/sd_recording'
        - $ref: '#/components/parameters/sd_networkfail'
        - $ref: '#/components/parameters/sd_motionalarm'
        - $ref: '#/components/parameters/sd_ioalarm'
        - $ref: '#/components/parameters/sd_stampspan'
        - $ref: '#/components/parameters/sd_imgleft'
        - $ref: '#/components/parameters/sd_imgright'
        - $ref: '#/components/parameters/sd_imgtop'
        - $ref: '#/components/parameters/sd_imgbottom'
        - $ref: '#/components/parameters/sd_imgres'
        - $ref: '#/components/parameters/qos_enabled'
        - $ref: '#/components/parameters/qos_video'
        - $ref: '#/components/parameters/qos_default'
        - $ref: '#/components/parameters/ipv6enabled'
        - $ref: '#/components/parameters/ipv6address'
        - $ref: '#/components/parameters/ipv6prefixlen'
        - $ref: '#/components/parameters/ipv6dhcp'
        - $ref: '#/components/parameters/ipv6addresstype'
        - $ref: '#/components/parameters/ipv6acceptrouters'
        - $ref: '#/components/parameters/equalbright'
        - $ref: '#/components/parameters/equalcolor'
        - $ref: '#/components/parameters/vertical_alignment'
        - $ref: '#/components/parameters/piris_ref_channel'
        - $ref: '#/components/parameters/exp_ref_channel'
        - $ref: '#/components/parameters/pan'
        - $ref: '#/components/parameters/tilt'
        - $ref: '#/components/parameters/ptz'
      responses:
        '200':
          description: Returns the parameters set in the request.
          content:
            text/plain:
              schema:
                type: object
                properties:
                  day_binning:
                    $ref: '#/components/schemas/day_binning'
                  night_binning:
                    $ref: '#/components/schemas/night_binning'
                  daynight:
                    $ref: '#/components/schemas/daynight'
                  upscaling:
                    $ref: '#/components/schemas/upscaling'
                  channelenable:
                    $ref: '#/components/schemas/channelenable'
                  brightness:
                    $ref: '#/components/schemas/brightness'
                  sharpness:
                    $ref: '#/components/schemas/sharpness'
                  saturation:
                    $ref: '#/components/schemas/saturation'
                  blue:
                    $ref: '#/components/schemas/blue'
                  red:
                    $ref: '#/components/schemas/red'
                  illum:
                    $ref: '#/components/schemas/illum'
                  freq:
                    $ref: '#/components/schemas/freq'
                  lowlight:
                    $ref: '#/components/schemas/lowlight'
                  shortexposures:
                    $ref: '#/components/schemas/shortexposures'
                  autoexp:
                    $ref: '#/components/schemas/autoexp'
                  exposure:
                    $ref: '#/components/schemas/exposure'
                  expwndleft:
                    $ref: '#/components/schemas/expwndleft'
                  expwndtop:
                    $ref: '#/components/schemas/expwndtop'
                  expwndwidth:
                    $ref: '#/components/schemas/expwndwidth'
                  expwndheight:
                    $ref: '#/components/schemas/expwndheight'
                  sensorleft:
                    $ref: '#/components/schemas/sensorleft'
                  sensortop:
                    $ref: '#/components/schemas/sensortop'
                  sensorwidth:
                    $ref: '#/components/schemas/sensorwidth'
                  sensorheight:
                    $ref: '#/components/schemas/sensorheight'
                  imgleft:
                    $ref: '#/components/schemas/imgleft'
                  imgtop:
                    $ref: '#/components/schemas/imgtop'
                  imgwidth:
                    $ref: '#/components/schemas/imgwidth'
                  imgheight:
                    $ref: '#/components/schemas/imgheight'
                  imgquality:
                    $ref: '#/components/schemas/imgquality'
                  imgres:
                    $ref: '#/components/schemas/imgres'
                  kneepoint:
                    $ref: '#/components/schemas/kneepoint'
                  analoggain:
                    $ref: '#/components/schemas/analoggain'
                  maxkneegain:
                    $ref: '#/components/schemas/maxkneegain'
                  maxexptime:
                    $ref: '#/components/schemas/maxexptime'
                  maxdigitalgain:
                    $ref: '#/components/schemas/maxdigitalgain'
                  webserverport:
                    $ref: '#/components/schemas/webserverport'
                  admin:
                    $ref: '#/components/schemas/admin'
                  viewer:
                    $ref: '#/components/schemas/viewer'
                  maxsensorwidth:
                    $ref: '#/components/schemas/maxsensorwidth'
                  maxsensorheight:
                    $ref: '#/components/schemas/maxsensorheight'
                  mdmode:
                    $ref: '#/components/schemas/mdmode'
                  motiondetect:
                    $ref: '#/components/schemas/motiondetect'
                  mdtotalzones:
                    $ref: '#/components/schemas/mdtotalzones'
                  auxin:
                    $ref: '#/components/schemas/auxin'
                  auxout:
                    $ref: '#/components/schemas/auxout'
                  cropping:
                    $ref: '#/components/schemas/cropping'
                  1080p_mode:
                    $ref: '#/components/schemas/1080p_mode'
                  pmask:
                    $ref: '#/components/schemas/pmask'
                  focus:
                    $ref: '#/components/schemas/focus'
                  zoom:
                    $ref: '#/components/schemas/zoom'
                  focusleft:
                    $ref: '#/components/schemas/focusleft'
                  focustop:
                    $ref: '#/components/schemas/focustop'
                  focusright:
                    $ref: '#/components/schemas/focusright'
                  focusbottom:
                    $ref: '#/components/schemas/focusbottom'
                  focuswindow:
                    $ref: '#/components/schemas/focuswindow'
                  af_dn:
                    $ref: '#/components/schemas/af_dn'
                  af_zoom:
                    $ref: '#/components/schemas/af_zoom'
                  casino_mode:
                    $ref: '#/components/schemas/casino_mode'
                  netopt:
                    $ref: '#/components/schemas/netopt'
                  multicast_rec:
                    $ref: '#/components/schemas/multicast_rec'
                  en_multicast:
                    $ref: '#/components/schemas/en_multicast'
                  fps:
                    $ref: '#/components/schemas/fps'
                  qp:
                    $ref: '#/components/schemas/qp'
                  qp_max:
                    $ref: '#/components/schemas/qp_max'
                  ratelimit_mode:
                    $ref: '#/components/schemas/ratelimit_mode'
                  ratelimit:
                    $ref: '#/components/schemas/ratelimit'
                  bitrate:
                    $ref: '#/components/schemas/bitrate'
                  keyframeinterval:
                    $ref: '#/components/schemas/keyframeinterval'
                  rtspport:
                    $ref: '#/components/schemas/rtspport'
                  spacialfilter:
                    $ref: '#/components/schemas/spacialfilter'
                  name:
                    $ref: '#/components/schemas/name'
                  mtu:
                    $ref: '#/components/schemas/mtu'
                  ip:
                    $ref: '#/components/schemas/ip'
                  subnetmask:
                    $ref: '#/components/schemas/subnetmask'
                  gateway:
                    $ref: '#/components/schemas/gateway'
                  eth_negotiation:
                    $ref: '#/components/schemas/eth_negotiation'
                  features:
                    $ref: '#/components/schemas/features'
                  audioinput:
                    $ref: '#/components/schemas/audioinput'
                  linein_volume:
                    $ref: '#/components/schemas/linein_volume'
                  mic_boost:
                    $ref: '#/components/schemas/mic_boost'
                  piris:
                    $ref: '#/components/schemas/piris'
                  pirispos:
                    $ref: '#/components/schemas/pirispos'
                  ir:
                    $ref: '#/components/schemas/ir'
                  white_balance:
                    $ref: '#/components/schemas/white_balance'
                  wbwndctrl:
                    $ref: '#/components/schemas/wbwndctrl'
                  wbwndleft:
                    $ref: '#/components/schemas/wbwndleft'
                  wbwndtop:
                    $ref: '#/components/schemas/wbwndtop'
                  wbwndwidth:
                    $ref: '#/components/schemas/wbwndwidth'
                  wbwndheight:
                    $ref: '#/components/schemas/wbwndheight'
                  ntpserver_ip:
                    $ref: '#/components/schemas/ntpserver_ip'
                  enclosure:
                    $ref: '#/components/schemas/enclosure'
                  gamma:
                    $ref: '#/components/schemas/gamma'
                  gamma2:
                    $ref: '#/components/schemas/gamma2'
                  bandwidthsaving:
                    $ref: '#/components/schemas/bandwidthsaving'
                  lowpower:
                    $ref: '#/components/schemas/lowpower'
                  motion_compensation:
                    $ref: '#/components/schemas/motion_compensation'
                  adjustable_ir:
                    $ref: '#/components/schemas/adjustable_ir'
                  irwidepos:
                    $ref: '#/components/schemas/irwidepos'
                  irtelepos:
                    $ref: '#/components/schemas/irtelepos'
                  irpos_chan1:
                    $ref: '#/components/schemas/irpos_chan1'
                  irpos_chan2:
                    $ref: '#/components/schemas/irpos_chan2'
                  snapstream:
                    $ref: '#/components/schemas/snapstream'
                  sensorcount:
                    $ref: '#/components/schemas/sensorcount'
                  scaling:
                    $ref: '#/components/schemas/scaling'
                  scaling_size:
                    $ref: '#/components/schemas/scaling_size'
                  sd_codec:
                    $ref: '#/components/schemas/sd_codec'
                  sd_fps:
                    $ref: '#/components/schemas/sd_fps'
                  sd_recording:
                    $ref: '#/components/schemas/sd_recording'
                  sd_networkfail:
                    $ref: '#/components/schemas/sd_networkfail'
                  sd_motionalarm:
                    $ref: '#/components/schemas/sd_motionalarm'
                  sd_ioalarm:
                    $ref: '#/components/schemas/sd_ioalarm'
                  sd_stampspan:
                    $ref: '#/components/schemas/sd_stampspan'
                  sd_imgleft:
                    $ref: '#/components/schemas/sd_imgleft'
                  sd_imgright:
                    $ref: '#/components/schemas/sd_imgright'
                  sd_imgtop:
                    $ref: '#/components/schemas/sd_imgtop'
                  sd_imgbottom:
                    $ref: '#/components/schemas/sd_imgbottom'
                  sd_imgres:
                    $ref: '#/components/schemas/sd_imgres'
                  qos_enabled:
                    $ref: '#/components/schemas/qos_enabled'
                  qos_video:
                    $ref: '#/components/schemas/qos_video'
                  qos_default:
                    $ref: '#/components/schemas/qos_default'
                  ipv6enabled:
                    $ref: '#/components/schemas/ipv6enabled'
                  ipv6address:
                    $ref: '#/components/schemas/ipv6address'
                  ipv6prefixlen:
                    $ref: '#/components/schemas/ipv6prefixlen'
                  ipv6dhcp:
                    $ref: '#/components/schemas/ipv6dhcp'
                  ipv6addresstype:
                    $ref: '#/components/schemas/ipv6addresstype'
                  ipv6acceptrouters:
                    $ref: '#/components/schemas/ipv6acceptrouters'
                  equalbright:
                    $ref: '#/components/schemas/equalbright'
                  equalcolor:
                    $ref: '#/components/schemas/equalcolor'
                  vertical_alignment:
                    $ref: '#/components/schemas/vertical_alignment'
                  piris_ref_channel:
                    $ref: '#/components/schemas/piris_ref_channel'
                  exp_ref_channel:
                    $ref: '#/components/schemas/exp_ref_channel'
  /g711:
    post:
      tags:
        - Audio
      summary: Transmit Audio to Line Out
      description: Transmits continuous G.711 Audio to Arecont Vision cameras.
      responses:
        '200':
          description: Returns an audio stream.
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    ipv6dhcp:
      description: |
        Enable/disable DHCP for IPv6.
      type: string
      enum:
        - 'on'
        - 'off'
    ipv6addresstype:
      description: |
        IPv6 address type. Use `manual` to override a DHCP-set address.
      type: string
      enum:
        - dhcp
        - manual
    ipv6acceptrouters:
      description: |
        IPv6 accept routers setting.
      type: boolean
    ipv6enabled:
      description: |
        Enable/disable IPv6.
      type: boolean
    ipv6address:
      description: |
        The IPv6 address for the camera.
      type: string
      format: ipv6
    ipv6prefixlen:
      description: |
        The IPv6 prefix.
      type: string
    scaling:
      description: Enable or disable down-scaling.
      type: string
      enum:
        - 'on'
        - 'off'
    scaling_size:
      description: 'Set scaling size as `width, height`. Width ranges from 128 to 1280; height ranges from 96 to 720.'
      type: string
    qos_enabled:
      description: |
        Arecont Vision cameras support RFC 2474 “Definition of the Differentiated services field (DS field) in the IPv4 and IPv6 headers”, which is widely adopted by router manufacturers to implement quality of service (QoS) mechanism. 

        Enable or disable quality of service (QOS).
      type: integer
      minimum: 0
      maximum: 1
    qos_video:
      description: |
        In Arecont Vision cameras, Per-Hop Behavior (PHB) type Assured Forwarding (AF) is the default PHB for video streaming over RTP. The recommended default Differentiated Services Code Point (DSCP) of AF is 34, which means low drop.
      type: integer
      minimum: 0
      maximum: 63
    qos_default:
      description: |
        In Arecont Vision cameras, Per-Hop Behavior (PHB) type Assured Forwarding (AF) is the default PHB for video streaming over RTP. The recommended default Differentiated Services Code Point (DSCP) of AF is 34, which means low drop. All other traffic uses default PHB with DSCP value 0.
      type: integer
      minimum: 0
      maximum: 63
    sd_codec:
      description: The codec used for video recorded to the camera's SD card.
      type: string
      enum:
        - jpeg
        - h264
    sd_fps:
      description: The framerate for video recorded to the camera's SD card.
      type: integer
      minimum: 0
      maximum: 30
    sd_playback_fps:
      description: 'Used to playback video from SD cards in 4k models. For 4K models, you do not “download” video from the SD card. Instead, you dynamically controll the playback framerate.'
      type: integer
      minimum: 0
      maximum: 30
    sd_recording:
      description: Enables/disables continuous local recording.
      type: string
      enum:
        - 'on'
        - 'off'
    sd_networkfail:
      description: Enables/disables local recording on network failure events.
      type: string
      enum:
        - 'on'
        - 'off'
    sd_motionalarm:
      description: Enables/disables local recording on motion events.
      type: string
      enum:
        - 'on'
        - 'off'
    sd_ioalarm:
      description: Enables/disables local recording on I/O alarm events.
      type: string
      enum:
        - 'on'
        - 'off'
    sd_stampspan:
      description: Returns timestamps for recorded video.
      type: boolean
    sd_playbackstamp:
      description: 'Playback video for the recorded timestamps - `beginningTime, endingTime`. If you don''t specify the `endTime` or set `0` for the end time, the camera will play until the end of recorded video.'
      type: string
      enum:
        - 'on'
        - 'off'
    sd:
      description: |
        Request images/video recorded on the SD card (local recording). `playback` plays back video in real time; `download` lets you stream video as fast as possible. Do not provide other parameters when reqeusting video recorded locally. 
      type: string
      enum:
        - 'on'
        - 'off'
    sd_imgleft:
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      type: integer
    sd_imgright:
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      type: integer
    sd_imgtop:
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      type: integer
    sd_imgbottom:
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      type: integer
    sd_imgres:
      description: Determine whether to record SD images at full or half resolution.
      type: string
      enum:
        - full
        - half
    irpos_chan1:
      description: |
        Controls IR intensity on LED board 1 of FLEX model cameras.
      type: integer
      minimum: 0
      maximum: 32
    irpos_chan2:
      description: |
        Controls IR intensity on LED board 2 of FLEX model cameras.
      type: integer
      minimum: 0
      maximum: 32
    kneepoint:
      description: |
        Custom mode setting
      type: integer
      minimum: 1
      maximum: 100
    analoggain:
      description: |
        Custom mode setting
      type: integer
      minimum: 1
      maximum: 100
    maxkneegain:
      description: |
        Custom mode setting
      type: integer
      minimum: 1
      maximum: 100
    maxexptime:
      description: |
        Custom mode setting
      type: integer
      minimum: 1
      maximum: 100
    maxdigitalgain:
      description: |
        Custom mode setting
      type: integer
      minimum: 1
      maximum: 100
    day_binning:
      description: |
        Enables or disables day binning mode for supported cameras.
      type: string
      enum:
        - 'on'
        - 'off'
    night_binning:
      description: |
        Enables or disables day binning mode for supported cameras.
      type: string
      enum:
        - 'on'
        - 'off'
    daynight:
      description: 'Sets day/night mode. Cameras default to `auto`, which sets day and night modes automatically. `dual` allows the client to pull both color and grayscale images simultaneously.'
      type: string
      enum:
        - auto
        - day
        - night
        - dual
    upscaling:
      description: |
        Scales monocrome images to the same size as color images. If upscaling is disabled, the ratio is 1.6 between color images and monochrome images. 
      type: string
      enum:
        - 'on'
        - 'off'
    channelenable:
      description: The channels you want to enable.
      type: string
      minimum: 1
      maximum: 15
    rotate:
      description: |
        Sets the rotation of the image in 90 degree increments. 90 and 270 degree rotations are available in newer models; get features to determine whether or not your camera supports these values.
      type: integer
      multipleOf: 90
      minimum: 0
      maximum: 270
    brightness:
      description: Sets brightness for the camera or channel.
      type: integer
      minimum: -50
      maximum: 50
    sharpness:
      description: Sets sharpness for the camera or channel.
      type: integer
      minimum: 0
      maximum: 4
    saturation:
      description: Sets color saturation for the camera or channel.
      type: integer
      minimum: 0
      maximum: 6
    blue:
      description: Sets blue balance for the camera or channel.
      type: integer
      minimum: -10
      maximum: 10
    red:
      description: Sets red balance for the camera or channel.
      type: integer
      minimum: -10
      maximum: 10
    illum:
      description: Sets illumination for the camera or channel.
      type: string
      enum:
        - auto
        - indoor
        - outdoor
        - mlx
    freq:
      description: 'Mains frequency in Hz, used for indoor lighting compensation.'
      type: integer
      minimum: 50
      maximum: 60
      multipleOf: 10
    lowlight:
      description: Exposure (low light) mode.
      type: string
      enum:
        - highspeed
        - speed
        - balance
        - quality
        - moonlight
    shortexposures:
      description: 'Shutter time in high-speed exposure mode, set in milliseconds.'
      type: integer
      minimum: 1
      maximum: 80
    exposure:
      description: Auto exposure mode
      type: string
      enum:
        - auto
        - 'on'
        - 'off'
    autoexp:
      description: Auto exposure mode
      type: string
      enum:
        - 'on'
        - 'off'
    expwndleft:
      description: The exposure window for the sensor.
      type: integer
      minimum: 0
    expwndtop:
      description: The exposure window for the sensor.
      type: integer
      minimum: 0
    expwndwidth:
      description: The exposure window for the sensor.
      type: integer
      minimum: 0
    expwndheight:
      description: The exposure window for the sensor.
      type: integer
      minimum: 0
    sensorleft:
      description: 'Sensor cropping, from the left.'
      type: integer
      minimum: 0
    sensortop:
      description: Sensor cropping from the top.
      type: integer
      minimum: 0
    sensorwidth:
      description: Sensor cropping based on width. Both sides are equally cropped by half the value.
      type: integer
      minimum: 0
    sensorheight:
      description: 'Sensor cropping based on height. The top and bottom are equally cropped by half the value, centering the image.'
      type: integer
      minimum: 0
    imgleft:
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      type: integer
      minimum: 0
    imgtop:
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      type: integer
      minimum: 0
    imgwidth:
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      type: integer
      minimum: 0
    imgheight:
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      type: integer
      minimum: 0
    imgquality:
      description: 'Image setting, used as the implcit perameter list in img.jpg image requests.'
      type: integer
      minimum: 1
      maximum: 26
    imgres:
      description: 'Image setting, used as the implcit perameter list in img.jpg image requests.'
      type: string
      enum:
        - full
        - half
    mac:
      description: Returns the MAC address of the camera.
      type: string
    model:
      description: Returns the camera's model number. `fullname` returns the camera's base model number and feature leter; `releasename` returns the manufacturer model number and feature letter — the real model number.
      type: string
      enum:
        - fullname
        - releasename
        - lpn
        - internal
    fwversion:
      description: Returns the camera's firmware version.
      type: boolean
    procversion:
      description: Returns the image processor version.
      type: boolean
    netversion:
      description: Returns the network processor version.
      type: boolean
    revision:
      description: Returns the PCB version.
      type: boolean
    params:
      description: |
        Perform basic camera actions

        * save - commits current settings to flash memory
        * factory - restore factory default settings
        * reboot - restarts the camera
      type: string
      enum:
        - save
        - factory
        - reboot
    webserverport:
      description: The port for the camera's web server.
      type: integer
      minimum: 0
      maximum: 65535
    admin:
      description: Get or set the admin-level password. Use the word 'empty' to reset the password.
      type: string
      minLength: 1
      maxLength: 16
      format: password
    viewer:
      description: Get or set the viewer-level password. Use the word 'empty' to reset the password.
      type: string
      minLength: 1
      maxLength: 16
      format: password
    maxsensorwidth:
      description: Get the maximum sensor width.
      type: integer
    maxsensorheight:
      description: Get the maximum sensor height.
      type: integer
    mdmode:
      description: Get or set motion alarm settings
      type: string
      enum:
        - 'on'
        - 'off'
    motiondetect:
      description: Get or set motion detection settings
      type: string
      enum:
        - 'on'
        - 'off'
    mdtotalzones:
      description: Set regular (64) or extended motion detection mode (1024). 4k cameras support motion detection in extended mode either.
      type: integer
      
    mdzonesize:
      description: Set motion detection zone size.
      type: integer
      minimum: 1
      maximum: 16
    
    mdlevelthreshold:
      description: Motion detection zone threshold
      type: integer
      minimum: 2
      maximum: 31
      
    mddetail:
      description: Motion detection zone detail
      type: integer
      minimum: 1
      maximum: 255
      
    mdprivacymask:
      description: Motion detection privacy mask
      type: integer
      
    mdresult:
      description: Motion detection zone result
      type: string
    auxin:
      description: Get auxin.
      type: boolean
    auxout:
      description: Get or set auxiliary audio out.
      type: string
      enum:
        - 'on'
        - 'off'
    cropping:
      description: |
        Get or set flexible cropping.
      type: string
      enum:
        - 'on'
        - 'off'
    1080p_mode:
      description: |
        Get or set 1080p mode — used in 10xx5 models only.
      type: string
      enum:
        - 'on'
        - 'off'
    pmask:
      description: |
        Get or set the privacy mask. Use `pmask<direction>` to set the privacy mask block.
      type: string
      enum:
        - 'on'
        - 'off'
    pmaskleft:
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      type: integer
      minimum: 0
      maximum: 1023
    pmaskright:
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      type: integer
      minimum: 0
      maximum: 1023
    pmasktop:
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      type: integer
      minimum: 0
      maximum: 1023
    pmaskbottom:
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      type: integer
      minimum: 0
      maximum: 1023
    pmaskblock:
      description: |
        Set the privacy mask block.
      type: string
      enum:
        - 'on'
        - 'off'
    focus:
      description: |
        Get or set focus moving steps. After setting focus/zoom, the new focus becomes valid after the next frame.
      oneOf:
        - type: string
          enum:
            - fullrange
            - shortrange
            - status
        - type: integer
          minimum: -20
          maximum: 20
    focusleft:
      type: integer
      minimum: 0
    focustop:
      type: integer
      minimum: 0
    focusright:
      type: integer
      minimum: 0
    focusbottom:
      type: integer
      minimum: 0
    zoom:
      description: |
        Set zoom moving steps.
      oneOf:
        - type: string
          enum:
            - reset
          description: Resets zoom level.
        - type: integer
          minimum: -20
          maximum: 20
    focuswindow:
      description: |
        Get or set the four sides of the focus window.
        
        When setting the focus window, provide the four values of the focus window as comma-separated integers from 0 to the maximum sensor value — width, height, width, height.
      type: array
      minItems: 4
      maxItems: 4
      items:
        type: integer
    af_dn:
      description: |
        Get or set autofocus after enabling the day-night switch.
      type: string
      enum:
        - 'on'
        - 'off'
    af_zoom:
      description: Get or set autofocus after zoom.
      type: string
      enum:
        - 'on'
        - 'off'
    casino_mode:
      description: Get or set casino mode (1080p models only)
      type: string
      enum:
        - 'on'
        - 'off'
    netopt:
      description: |
        Get or set network related settings. Integers correspond to the bits you want to enable or disable.


        bit 0 = DHCP IP assignment; bit 1 = BOOTP IP assignment; bit 2 = RARP IP assignment; bit 3 = IP lock; bit 4 = NTP time requester; bit 5 = PSIA discovery multicast server; bit 6 = RTP multicast server; bit 7 = MTU enable/disable; bit 8 = PSIA discovery zeroconfig server; bit 9 = IPv6 stack enable; bit 10 = DHCPv6 enable
      type: integer
      maximum: 10
      minimum: 0
    streamip:
      description: Get or set the multicast IP address.
      type: string
      format: ipv4
      pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
    rtpport:
      description: Get or set the multicast port.
      type: integer
      minimum: 0
      maximum: 65535
    sapip:
      description: Get or set the multicast SAP IP address.
      type: string
      format: ipv4
      pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
    multicast_rec:
      description: Get or set the multicast reception setting.
      type: string
      enum:
        - 'on'
        - 'off'
    en_multicast:
      description: |
        Enable multicast announcement.

        1. To pass ONVIF conformance test, firmware does not announce ONVIF multicast by default. You need to use this HTTP command to enable multicast announcement manually, or your VMS may fail to establish multicast streaming.
        2. This setting enables or disables support for incoming multicast traffic. Disabling this feature will not affect the camera's ability to provide multicast video. 
        3. For multi-sensor cameras, HTTP commands streamip, sapip and rtpport are channel specific and not global. Currently SurroundVideo series is the only multi-sensor camera that supports these multicast HTTP commands, starting from firmware 65192.14.
      type: integer
      minimum: 0
      maximum: 1
    res:
      description: The resolution MJPEGs you want to return
      type: string
      enum:
        - full
        - half
    x0:
      description: |
        Left coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      type: integer
      format: int32
    y0:
      description: |
        Top coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      type: integer
      format: int32
    x1:
      description: |
        Right coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      type: integer
      format: int32
    y1:
      description: |
        Bottom coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      type: integer
    qp:
      description: |
        The quantization parameter for the H.264 encoder. Sets the target qp. Lower qp indicates a higher quality image. This paramaeter is ignored if your request includes the bitrate parameter. 
      type: string
      minimum: 16
      maximum: 36
    qp_max:
      description: |
        Get or set the maximum allowed QP value — i.e. the lowest allowable quality.
      type: string
      minimum: 16
      maximum: 36
    ratelimit_mode:
      description: |
        Get or set variable bitrate limit mode.
      type: boolean
    ratelimit:
      description: |
        Get or set a variable bitrate limit.
      type: string
      minimum: 0
      maximum: 65535
    quality:
      description: The compression quality of the image
      type: integer
      minimum: 1
      maximum: 21
    doublescan:
      description: Effectively a boolean that determines whether or not the camera should delay image output until a new image is available.
      type: integer
      minimum: 0
      maximum: 1
    ssn:
      description: |
        Stream identifier — distinguishes multiple streams from one another. Use a unique ssn for each stream with a unique image size, quality and/or frame rate. Each camera supports up to eight simultaneous non-identical streams. Each client must have a unique (ip:ssn)
      type: integer
      minimum: 1
      maximum: 65535
    iframe:
      description: |
        Effectively a boolean (0 or 1). Set to 1 will force the camera to return an Intra frame (I-frame) with a corresponding SPS and PPS as an IDR slice, so that the stream is decodable from this point. When opening a new stream (as when changing the image size and/or frame rate) the I-frame is sent automatically regardless of the input value of `iframe`. To reduce the stream size, reduce the frequency of `iframe = 1` in requests. You can set the P-frames for any of the streams sent by the camera is set using
        one of the following HTTP commands :
        http://camera_ip/setreg?page=3&reg=21&val=(0..100)

        http://camera_ip/set?keyframeinterval=(0..100)
        When the on-camera counter of P-frames fills up, the camera will return an I-frame even if iframe in the request is set to 0. To find out whether an I-frame was received, check the HTTP Content Type.
      type: integer
      maximum: 1
      minimum: 0
    bitrate:
      description: |
        Sets a constant bitrate in kilobits per second. If this parameter is present in the request, the QP parameter is ignored, and the camera adjusts quantization parameters automatically to maintain the specified bitrate.
      type: integer
      minimum: 1
      maximum: 65535
    intra_period:
      description: |
        Valid when requesting a non-zero bitrate and periodically requesting `iframe=1`. Specifies the intra-frame period during which you are sending requests with `iframe=1`. If you do not specify `intra_period`, bitrate control will not function correctly unless the actual period of sending iframe=1 requests is the same as the number of P-frames specified in register 3:21 of the camera via one of the commands described above. If you do not request `iframe=1` at all, then the `intra_period` parameter is not required and bitrate control will rely on the number of P-frames set in register 3:21. 
      type: integer
      minimum: 0
      maximum: 255
    fps:
      description: Get or set the camera framerate. values over the camera's famerate will return the camera's maximum framerate (model dependent).
      type: integer
      minimum: 0
      maximum: 30
    channel:
      description: |
        If `upscaling=on`, use the channel parameter to retrieve color or monochrome images from the camera.
      type: string
      enum:
        - color
        - mono
    keyframe:
      description: |
        Get or set key frame setting. Yields an I-frame on the next available frame.
      type: boolean
    keyframeinterval:
      description: |
        Get or set the key frame interval.

        * For non-4K models the maximum limit is 100
        * The numerical value in “set?keyframeinterval=(0…65535)” represents the P-frame count between two consecutive key frames (I-frames)
      type: integer
      minimum: 0
      maximum: 200
      default: 50
    rtspport:
      description: |
        Get or set the RTSP port.
      type: integer
      minimum: 0
      maximum: 65535
      default: 554
    spacialfilter:
      description: |
        Get or set the low-light noise filter.
      type: integer
      minimum: 0
      maximum: 100
    name:
      description: |
        Get or set the camera name.
      type: string
      minLength: 0
      maxLength: 32
    mtu:
      description: |
        Get or set the MTU size.
      type: integer
      minimum: 512
      maximum: 1500
    ip:
      description: |
        Get or set the camera's IP address.
      type: string
      pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
    subnetmask:
      description: |
        Get or set the camera's subnet mask.
      type: string
      pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
    gateway:
      description: |
        Get or set the camera's default gateway.
      type: string
      pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
    eth_negotiation:
      description: |
        When set to auto, auto negotiation is enabled. Connected devices will first share their transmission capabilities, such as speed and duplex mode, and then choose the highest performance transmission mode they both support.

        When set to fixed, the camera uses a transmission speed of 100Mb and full duplex mode.
      type: string
      enum:
        - auto
        - fixed
    features:
      description: |
        Returns an integer for enabled features. Integers that are not returned are not enabled.
      type: integer
    audioinput:
      description: |
        The source of audio input.
      type: string
      enum:
        - mic
        - linein
    linein_volume:
      description: |
        Volume of line-in audio.
      type: integer
      minimum: 0
      maximum: 45
    mic_boost:
      description: |
        Volume of microphone-in audio.
      type: integer
      minimum: 0
      maximum: 2
    piris:
      description: |
        Enable/disable P-iris
      type: string
      enum:
        - 'on'
        - 'off'
    pirispos:
      description: |
        The position P-iris closes to
      type: integer
      minimum: 0
      maximum: 255
    equalbright:
      description: |
        Equalize brightness across sensors in a multisensor camera.
      type: string
      enum:
        - 'on'
        - 'off'
    equalcolor:
      description: |
        Equalize color across sensors in a multisensor camera.
      type: string
      enum:
        - 'on'
        - 'off'
    vertical_alignment:
      description: |
        Align sensors in a multisensor camera.
      type: string
      enum:
        - 'on'
        - 'off'
    vertical_shift:
      description: |
        Shift sensors vertically.
      type: integer
    piris_ref_channel:
      description: |
        Set the P-iris reference channel for a multi-channel camera.
      type: integer
    exp_ref_channel:
      description: |
        Set the WDR reference channel for a multi-channel camera.
      oneOf:
        - type: integer
        - type: string
          enum: [off]
    ir:
      description: |
        Infrafred light control. `on` enables IR in night mode; `alwayson` enables IR always.
      type: string
      enum:
        - 'on'
        - alwayson
        - 'off'
    make:
      description: |
        Get the make of the camera.
      type: string
    white_balance:
      description: |
        White balance control.
      type: string
      enum:
        - 'on'
        - 'off'
    wbwndctrl:
      description: |
        White balance window control.
      type: string
      enum:
        - 'on'
        - 'off'
    wbwndleft:
      description: |
        White balance window left start value. Maximum values depend on your sensor size.
      type: integer
      minimum: 0
    wbwndtop:
      description: |
        White balance window top start value. Maximum values depend on your sensor size.
      type: integer
      minimum: 0
    wbwndwidth:
      description: |
        White balance window width, beginning from the `wbwndleft` value. Maximum values depend on your sensor size.
      type: integer
      minimum: 0
    wbwndheight:
      description: |
        White balance window height, beginning from the `wbwndtop` value. Maximum values depend on your sensor size.
      type: integer
      minimum: 0
    ntpserver_ip:
      description: |
        NTP server address.
      type: string
      pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
    enclosure:
      description: |
        Returns the camera's model name. Provide `code` to return the model type number.
      type: string
      enum:
        - code
    gamma:
      description: |
        Gamma for single sensor and Surroundvideo1 cameras.
      type: integer
      minimum: 0
      maximum: 100
    gamma2:
      description: |
        Gamma for the second sensor in dual sensor cameras.
      type: integer
      minimum: 0
      maximum: 100
    bandwidthsaving:
      description: |
        Bandwidth saving mode settings.
      type: string
      enum:
        - 'on'
        - 'off'
    lowpower:
      description: |
        Low power mode settings.
      type: string
      enum:
        - 'on'
        - 'off'
    motion_compensation:
      description: |
        Motion compensation settings.
      type: string
      enum:
        - 'on'
        - 'off'
    adjustable_ir:
      description: |
        Adjustable IR light settings.
      type: string
      enum:
        - adaptive
        - preset
        - disabled
    irwidepos:
      description: |
        The adjustable intensity of wide IR lights.
      type: integer
      minimum: 0
      maximum: 7
    irtelepos:
      description: |
        The adjustable intensity of tele IR lights.
      type: integer
      minimum: 0
      maximum: 7
    snapstream:
      description: |
        Snapstream on/off setting.
      type: string
      enum:
        - 'on'
        - 'off'
    sensorcount:
      description: |
        Returns the sensor count. Use the sensor count to determine the channels you want to get or set when 
      type: integer
  parameters:
    pan:
      name: pan
      in: query
      description: |
        Set a pan value.
      schema:
        type: integer
      allowEmptyValue: true
    tilt:
      name: tilt
      in: query
      description: |
        Set a tilt value.
      schema:
        type: integer
      allowEmptyValue: true
    ptz:
      name: ptz
      in: query
      description: |
        Use to engage, record, or save a preset.
      schema:
        oneOf:
          - type: string
            description: |
              Performs 3 different actions:
              
              * Use `preset1` or `preset2` to engage a preset.
              * Use `record_preset` or `record_preset2` to record to record pan, tilt, and zoom steps for the preset.
              * Use `save_preset` to save a preset that is currently set to record. You cannot record 2 presets simultaneously.
              * Use `home` to send the camera to the home position.
            enum: [preset1, preset2, record_preset1, record_preset2, save_preset] 
          - type: integer
            description: Use to move to all modules to a preset postion. For example, a value of `270` moves all modules to a 270 degree preset position.
    switcher:
      name: switcher
      in: query
      description: |
        Run this command to detect a pan module collision with another module and if module 2 is in home.

        * Bit 0 to 3 of the returned value are the status of collision sensor on channel 1 to 4. 
        * Bit 4 is the home position sensor status.
      schema:
        type: boolean
      allowEmptyValue: true
    ipv6dhcp:
      name: ipv6dhcp
      in: query
      description: |
        Enable/disable DHCP for IPv6.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    ipv6addresstype:
      name: ipv6addresstype
      in: query
      description: |
        IPv6 address type. Use `manual` to override a DHCP-set address.
      schema:
        type: string
        enum:
          - dhcp
          - manual
      allowEmptyValue: true
    ipv6acceptrouters:
      name: ipv6acceptrouters
      in: query
      description: |
        IPv6 accept routers setting.
      schema:
        type: boolean
      allowEmptyValue: true
    ipv6enabled:
      name: ipv6enabled
      in: query
      description: |
        Enable/disable IPv6.
      schema:
        type: boolean
      allowEmptyValue: true
    ipv6address:
      name: ipv6address
      in: query
      description: |
        The IPv6 address for the camera.
      schema:
        type: string
        format: ipv6
      allowEmptyValue: true
    ipv6prefixlen:
      name: ipv6prefixlen
      in: query
      description: |
        The IPv6 prefix.
      schema:
        type: string
      allowEmptyValue: true
    qos_enabled:
      name: qos_enabled
      in: query
      description: |
        Arecont Vision cameras support RFC 2474 “Definition of the Differentiated services field (DS field) in the IPv4 and IPv6 headers”, which is widely adopted by router manufacturers to implement quality of service (QoS) mechanism. 

        Enable or disable quality of service (QOS).
      schema:
        type: integer
        minimum: 0
        maximum: 1
      allowEmptyValue: true
    qos_video:
      name: qos_video
      in: query
      description: |
        In Arecont Vision cameras, Per-Hop Behavior (PHB) type Assured Forwarding (AF) is the default PHB for video streaming over RTP. The recommended default Differentiated Services Code Point (DSCP) of AF is 34, which means low drop.
      schema:
        type: integer
        minimum: 0
        maximum: 63
      allowEmptyValue: true
    qos_default:
      name: qos_default
      in: query
      description: |
        In Arecont Vision cameras, Per-Hop Behavior (PHB) type Assured Forwarding (AF) is the default PHB for video streaming over RTP. The recommended default Differentiated Services Code Point (DSCP) of AF is 34, which means low drop. All other traffic uses default PHB with DSCP value 0.
      schema:
        type: integer
        minimum: 0
        maximum: 63
      allowEmptyValue: true
    sd_codec:
      name: sd_codec
      in: query
      description: The codec used for video recorded to the camera's SD card.
      schema:
        type: string
        enum:
          - jpeg
          - h264
      allowEmptyValue: true
    sd_fps:
      name: sd_fps
      in: query
      description: The framerate for video recorded to the camera's SD card.
      schema:
        type: integer
        minimum: 0
        maximum: 30
      allowEmptyValue: true
    sd_playback_fps:
      name: sd_playback_fps
      in: query
      description: 'Used to playback video from SD cards in 4k models. For 4K models, you do not “download” video from the SD card. Instead, you dynamically controll the playback framerate.'
      schema:
        type: integer
        minimum: 0
        maximum: 30
      allowEmptyValue: true
    sd_recording:
      name: sd_recording
      in: query
      description: Enables/disables continuous local recording.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    sd_networkfail:
      name: sd_networkfail
      in: query
      description: Enables/disables local recording on network failure events.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    sd_motionalarm:
      name: sd_motionalarm
      in: query
      description: Enables/disables local recording on motion events.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    sd_ioalarm:
      name: sd_ioalarm
      in: query
      description: Enables/disables local recording on I/O alarm events.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    sd_stampspan:
      name: sd_stampspan
      in: query
      description: Returns timestamps for recorded video.
      schema:
        type: boolean
      allowEmptyValue: true
    sd_playbackstamp:
      name: sd_playbackstamp
      in: query
      description: 'Playback video for the recorded timestamps - `beginningTime, endingTime`. If you don''t specify the `endTime` or set `0` for the end time, the camera will play until the end of recorded video.'
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    sd:
      name: sd
      in: query
      description: |
        Use to request images/video recorded on the SD card. `playback` plays back video in real time; `download` lets you stream video as fast as possible.         
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    sd_imgleft:
      name: sd_imgleft
      in: query
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      schema:
        type: integer
      allowEmptyValue: true
    sd_imgright:
      name: sd_imgright
      in: query
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      schema:
        type: integer
      allowEmptyValue: true
    sd_imgtop:
      name: sd_imgtop
      in: query
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      schema:
        type: integer
      allowEmptyValue: true
    sd_imgbottom:
      name: sd_imgbottom
      in: query
      description: Select a region of video that you want ot record to the SD card. You should set this parameter before you turn on local recording.
      schema:
        type: integer
      allowEmptyValue: true
    sd_imgres:
      name: sd_imgres
      in: query
      description: Determine whether to record SD images at full or half resolution.
      schema:
        type: string
        enum:
          - full
          - half
      allowEmptyValue: true
    ver:
      name: ver
      in: query
      description: |
        Arecont Vision cameras support both HTTP/1.0 and HTTP/1.1 protocols as defined by RFC-1945 and RFC2068, respectively. While HTTP/1.0 is simple, it closes the transmission after each image, forcing the client to incur a round trip delay; this limits the speed of image transmission when you request individual images rather than an mjpeg stream. However, HTTP/1.0 is reliable and supported by all HTTP implementations, albeit with limited speed. By default, Arecont Vision cameras are use HTTP/1.0 protocol regardless of the HTTP version used by the client.

        Use HTTP/1.1 if you want faster full duplex communication and image delivery.
      schema:
        type: string
        enum:
          - HTTP/1.0
          - HTTP/1.1
    irpos_chan1:
      name: irpos_chan1
      in: query
      description: |
        Controls IR intensity on LED board 1 of FLEX model cameras.
      schema:
        type: integer
        minimum: 0
        maximum: 32
    irpos_chan2:
      name: irpos_chan2
      in: query
      description: |
        Controls IR intensity on LED board 2 of FLEX model cameras.
      schema:
        type: integer
        minimum: 0
        maximum: 32
    kneepoint:
      name: kneepoint
      in: query
      description: |
        Custom mode setting
      schema:
        type: integer
        minimum: 1
        maximum: 100
      allowEmptyValue: true
    analoggain:
      name: analoggain
      in: query
      description: |
        Custom mode setting
      schema:
        type: integer
        minimum: 1
        maximum: 100
      allowEmptyValue: true
    maxkneegain:
      name: maxkneegain
      in: query
      description: |
        Custom mode setting
      schema:
        type: integer
        minimum: 1
        maximum: 100
      allowEmptyValue: true
    maxexptime:
      name: maxexptime
      in: query
      description: |
        Custom mode setting
      schema:
        type: integer
        minimum: 1
        maximum: 100
      allowEmptyValue: true
    maxdigitalgain:
      name: maxdigitalgain
      in: query
      description: |
        Custom mode setting
      schema:
        type: integer
        minimum: 1
        maximum: 100
      allowEmptyValue: true
    day_binning:
      name: day_binning
      in: query
      description: |
        Enables or disables day binning mode for supported cameras.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    night_binning:
      name: night_binning
      in: query
      description: |
        Enables or disables day binning mode for supported cameras.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    daynight:
      name: daynight
      in: query
      description: 'Sets day/night mode. Cameras default to `auto`, which sets day and night modes automatically. `dual` allows the client to pull both color and grayscale images simultaneously.'
      schema:
        type: string
        enum:
          - auto
          - day
          - night
          - dual
    upscaling:
      name: upscaling
      in: query
      description: |
        Scales monocrome images to the same size as color images. If upscaling is disabled, the ratio is 1.6 between color images and monochrome images. 
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
    scaling:
      name: scaling
      in: query
      description: Enable or disable down-scaling.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    scaling_size:
      name: scaling
      in: query
      description: 'Set scaling size as `width, height`. Width ranges from 128 to 1280; height ranges from 96 to 720.'
      schema:
        type: string
      allowEmptyValue: true
    channelenable:
      name: channelenable
      in: query
      description: The channels you want to enable.
      schema:
        type: string
        minimum: 1
        maximum: 15
    rotate:
      name: rotate
      in: query
      description: |
        Sets the rotation of the image in 90 degree increments. 90 and 270 degree rotations are available in newer models; get features to determine whether or not your camera supports these values.
      schema:
        type: integer
        multipleOf: 90
        minimum: 0
        maximum: 270
    brightness:
      name: brightness
      in: query
      description: Sets brightness for the camera or channel.
      schema:
        type: integer
        minimum: -50
        maximum: 50
    sharpness:
      name: sharpness
      in: query
      description: Sets sharpness for the camera or channel.
      schema:
        type: integer
        minimum: 0
        maximum: 4
    saturation:
      name: saturation
      in: query
      description: Sets color saturation for the camera or channel.
      schema:
        type: integer
        minimum: 0
        maximum: 6
    blue:
      name: blue
      in: query
      description: Sets blue balance for the camera or channel.
      schema:
        type: integer
        minimum: -10
        maximum: 10
    red:
      name: red
      in: query
      description: Sets red balance for the camera or channel.
      schema:
        type: integer
        minimum: -10
        maximum: 10
    illum:
      name: illum
      in: query
      description: Sets illumination for the camera or channel.
      schema:
        type: string
        enum:
          - auto
          - indoor
          - outdoor
          - mlx
    freq:
      name: freq
      in: query
      description: 'Mains frequency in Hz, used for indoor lighting compensation.'
      schema:
        type: integer
        minimum: 50
        maximum: 60
        multipleOf: 10
    lowlight:
      name: lowlight
      in: query
      description: Exposure (low light) mode.
      schema:
        type: string
        enum:
          - highspeed
          - speed
          - balance
          - quality
          - moonlight
    shortexposures:
      name: shortexposures
      in: query
      description: 'Shutter time in high-speed exposure mode, set in milliseconds.'
      schema:
        type: integer
        minimum: 1
        maximum: 80
    exposure:
      name: exposure
      in: query
      description: Auto exposure mode
      schema:
        type: string
        enum:
          - auto
          - 'on'
          - 'off'
    autoexp:
      name: autoexp
      in: query
      description: Auto exposure mode
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
    expwndleft:
      name: expwndleft
      in: query
      description: The exposure window for the sensor.
      schema:
        type: integer
        minimum: 0
    expwndtop:
      name: expwndtop
      in: query
      description: The exposure window for the sensor.
      schema:
        type: integer
        minimum: 0
    expwndwidth:
      name: expwndwidth
      in: query
      description: The exposure window for the sensor.
      schema:
        type: integer
        minimum: 0
    expwndheight:
      name: expwndheight
      in: query
      description: The exposure window for the sensor.
      schema:
        type: integer
        minimum: 0
    sensorleft:
      name: sensorleft
      in: query
      description: 'Sensor cropping, from the left.'
      schema:
        type: integer
        minimum: 0
    sensortop:
      name: sensortop
      in: query
      description: Sensor cropping from the top.
      schema:
        type: integer
        minimum: 0
    sensorwidth:
      name: sensorwidth
      in: query
      description: Sensor cropping based on width. Both sides are equally cropped by half the value.
      schema:
        type: integer
        minimum: 0
    sensorheight:
      name: sensorheight
      in: query
      description: 'Sensor cropping based on height. The top and bottom are equally cropped by half the value, centering the image.'
      schema:
        type: integer
        minimum: 0
    imgleft:
      name: imgleft
      in: query
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      schema:
        type: integer
        minimum: 0
    imgtop:
      name: imgtop
      in: query
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      schema:
        type: integer
        minimum: 0
    imgwidth:
      name: imgwidth
      in: query
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      schema:
        type: integer
        minimum: 0
    imgheight:
      name: imgheight
      in: query
      description: 'Image setting, used as the implcit perameter in img.jpg image requests.'
      schema:
        type: integer
        minimum: 0
    imgquality:
      name: imgquality
      in: query
      description: 'Image setting, used as the implcit perameter list in img.jpg image requests.'
      schema:
        type: integer
        minimum: 1
        maximum: 26
    imgres:
      name: imgres
      in: query
      description: 'Image setting, used as the implcit perameter list in img.jpg image requests.'
      schema:
        type: string
        enum:
          - full
          - half
    mac:
      name: mac
      in: query
      description: Returns the MAC address of the camera.
      schema:
        type: string
    model:
      name: model
      in: query
      description: Returns the camera's model number. `fullname` returns the camera's base model number and feature leter; `releasename` returns the manufacturer model number and feature letter — the real model number.
      schema:
        type: string
        enum:
          - fullname
          - releasename
          - lpn
          - internal
      allowEmptyValue: true
    fwversion:
      name: fwversion
      in: query
      description: Returns the camera's firmware version.
      schema:
        type: boolean
      allowEmptyValue: true
    procversion:
      name: procversion
      in: query
      description: Returns the image processor version.
      schema:
        type: boolean
      allowEmptyValue: true
    netversion:
      name: netversion
      in: query
      description: Returns the network processor version.
      schema:
        type: boolean
      allowEmptyValue: true
    revision:
      name: revision
      in: query
      description: Returns the PCB version.
      schema:
        type: boolean
      allowEmptyValue: true
    params:
      name: params
      in: query
      description: |
        Perform basic camera actions

        * save - commits current settings to flash memory
        * factory - restore factory default settings
        * reboot - restarts the camera
      schema:
        type: string
        enum:
          - save
          - factory
          - reboot
    webserverport:
      name: webserverport
      in: query
      description: The port for the camera's web server.
      schema:
        type: integer
        minimum: 0
        maximum: 65535
      allowEmptyValue: true
    admin:
      name: admin
      in: query
      description: Get or set the admin-level password.
      schema:
        oneOf:
          - type: string
            description: ASCII symbols representing your password.
            minLength: 1
            maxLength: 16
            format: password
          - type: string
            description: The keyword to erase the current password.
            enum:
              - empty
      allowEmptyValue: true
    viewer:
      name: viewer
      in: query
      description: Get or set the viewer-level password.
      schema:
        oneOf:
          - type: string
            description: ASCII symbols representing your password.
            minLength: 1
            maxLength: 16
            format: password
          - type: string
            description: The keyword to erase the current password.
            enum:
              - empty
    maxsensorwidth:
      name: maxsensorwidth
      in: query
      description: Get the maximum sensor width.
      schema:
        type: integer
      allowEmptyValue: true
    maxsensorheight:
      name: maxsensorheight
      in: query
      description: Get the maximum sensor height.
      schema:
        type: integer
      allowEmptyValue: true
    mdmode:
      name: mdmode
      in: query
      description: Get or set motion alarm settings
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    motiondetect:
      name: motiondetect
      in: query
      description: Get or set motion detection settings
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    mdtotalzones:
      name: mdtotalzones
      in: query
      description: Set regular (64) or extended motion detection mode (1024). 4k cameras support motion detection in extended mode either.
      schema:
        type: integer
      allowEmptyValue: true
    mdzonesize:
      name: mdzonesize
      in: query
      description: Set motion detection zone size.
      schema:
        type: integer
        minimum: 1
        maximum: 16
      allowEmptyValue: true
    mdlevelthreshold:
      name: mdlevelthreshold
      in: query
      description: Motion detection zone threshold
      schema:
        type: integer
        minimum: 2
        maximum: 31
      allowEmptyValue: true
    mddetail:
      name: mdlevelthreshold
      in: query
      description: Motion detection zone detail
      schema:
        type: integer
        minimum: 1
        maximum: 255
      allowEmptyValue: true
    mdprivacymask:
      name: mdprivacymask
      in: query
      description: Motion detection privacy mask
      schema:
        type: integer
      allowEmptyValue: true
    mdresult:
      name: mdlevelthreshold
      in: query
      description: Motion detection zone result
      schema:
        type: boolean
      allowEmptyValue: true
    auxin:
      name: auxin
      in: query
      description: Get auxin.
      schema:
        type: boolean
      allowEmptyValue: true
    auxout:
      name: auxout
      in: query
      description: Get or set auxiliary audio out.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    cropping:
      name: cropping
      in: query
      description: |
        Get or set flexible cropping.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    1080p_mode:
      name: 1080p_mode
      in: query
      description: |
        Get or set 1080p mode — used in 10xx5 models only.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    pmask:
      name: pmask
      in: query
      description: |
        Get or set the privacy mask. Use `pmask<direction>` to set the privacy mask block.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    pmaskleft:
      name: pmaskleft
      in: query
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      schema:
        type: integer
        minimum: 0
        maximum: 1023
      allowEmptyValue: true
    pmaskright:
      name: pmaskright
      in: query
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      schema:
        type: integer
        minimum: 0
        maximum: 1023
      allowEmptyValue: true
    pmasktop:
      name: pmasktop
      in: query
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      schema:
        type: integer
        minimum: 0
        maximum: 1023
      allowEmptyValue: true
    pmaskbottom:
      name: pmaskbottom
      in: query
      description: |
        Get, set, or erace a privacy mask block (32 x 32 pixels per block).
      schema:
        type: integer
        minimum: 0
        maximum: 1023
      allowEmptyValue: true
    pmaskblock:
      name: pmaskblock
      in: query
      description: |
        Set the privacy mask block.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    focus:
      name: focus
      in: query
      description: |
        Get or set focus moving steps. After setting focus/zoom, the new focus becomes valid after the next frame.
      schema:
        oneOf:
          - type: string
            enum:
              - fullrange
              - shortrange
              - status
          - type: integer
            minimum: -20
            maximum: 20
      allowEmptyValue: true
    focusleft:
      name: focusleft
      in: query
      schema:
        type: integer
        minimum: 0
    focustop:
      name: focustop
      in: query
      schema:
        type: integer
        minimum: 0
    focusright:
      name: focusright
      in: query
      schema:
        type: integer
        minimum: 0
    focusbottom:
      name: focusbottom
      in: query
      schema:
        type: integer
        minimum: 0
    zoom:
      name: zoom
      in: query
      description: |
        Set zoom moving steps.
      schema:
        oneOf:
          - type: string
            enum:
              - reset
            description: Resets zoom level.
          - type: integer
            minimum: -20
            maximum: 20
    focuswindow:
      name: focuswindow
      in: query
      description: Get or set the four sides of the focus window.
      schema:
        type: array
        description: 'When setting the focus window, provide the four values of the focus window as comma-separated integers from 0 to the maximum sensor value — width, height, width, height.'
        minItems: 4
        maxItems: 4
        items:
          type: integer
      allowEmptyValue: true
    af_dn:
      name: af_dn
      in: query
      description: |
        Get or set autofocus after enabling the day-night switch.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    af_zoom:
      name: af_zoom
      in: query
      description: Get or set autofocus after zoom.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    casino_mode:
      name: casino_mode
      in: query
      description: Get or set casino mode (1080p models only)
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    netopt:
      name: netopt
      in: query
      description: |
        Get or set network related settings. Integers correspond to the bits you want to enable or disable.


        bit 0 = DHCP IP assignment; bit 1 = BOOTP IP assignment; bit 2 = RARP IP assignment; bit 3 = IP lock; bit 4 = NTP time requester; bit 5 = PSIA discovery multicast server; bit 6 = RTP multicast server; bit 7 = MTU enable/disable; bit 8 = PSIA discovery zeroconfig server; bit 9 = IPv6 stack enable; bit 10 = DHCPv6 enable
      schema:
        type: integer
        maximum: 10
        minimum: 0
      allowEmptyValue: true
    streamip:
      name: streamip
      in: query
      description: Get or set the multicast IP address.
      schema:
        type: string
        format: ipv4
        pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
      allowEmptyValue: true
    rtpport:
      name: rtpport
      in: query
      description: Get or set the multicast port.
      schema:
        type: integer
        minimum: 0
        maximum: 65535
      allowEmptyValue: true
    sapip:
      name: sapip
      in: query
      description: Get or set the multicast SAP IP address.
      schema:
        type: string
        format: ipv4
        pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
      allowEmptyValue: true
    multicast_rec:
      name: multicast_rec
      in: query
      description: Get or set the multicast reception setting.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    en_multicast:
      name: en_multicast
      in: query
      description: |
        Enable multicast announcement.

        1. To pass ONVIF conformance test, firmware does not announce ONVIF multicast by default. You need to use this HTTP command to enable multicast announcement manually, or your VMS may fail to establish multicast streaming.
        2. This setting enables or disables support for incoming multicast traffic. Disabling this feature will not affect the camera's ability to provide multicast video. 
        3. For multi-sensor cameras, HTTP commands streamip, sapip and rtpport are channel specific and not global. Currently SurroundVideo series is the only multi-sensor camera that supports these multicast HTTP commands, starting from firmware 65192.14.
      schema:
        type: integer
        minimum: 0
        maximum: 1
      allowEmptyValue: true
    res:
      name: res
      in: query
      description: The resolution MJPEGs you want to return
      schema:
        type: string
        enum:
          - full
          - half
    x0:
      name: x0
      in: query
      description: |
        Left coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      schema:
        type: integer
        format: int32
    y0:
      name: y0
      in: query
      description: |
        Top coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      schema:
        type: integer
        format: int32
    x1:
      name: x1
      in: query
      description: |
        Right coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      schema:
        type: integer
        format: int32
    y1:
      name: y1
      in: query
      description: |
        Bottom coordinate, used to offset the image. This value should be divisible by 32 if `res=full` or 64 if `res=half`.
      schema:
        type: integer
    qp:
      name: qp
      in: query
      description: |
        The quantization parameter for the H.264 encoder. Sets the target qp. Lower qp indicates a higher quality image. This paramaeter is ignored if your request includes the bitrate parameter. 
      schema:
        type: string
        minimum: 16
        maximum: 36
      allowEmptyValue: true
    qp_max:
      name: qp_max
      in: query
      description: |
        Get or set the maximum allowed QP value — i.e. the lowest allowable quality.
      schema:
        type: string
        minimum: 16
        maximum: 36
      allowEmptyValue: true
    ratelimit_mode:
      name: ratelimit_mode
      in: query
      description: |
        Get or set variable bitrate limit mode.
      schema:
        type: boolean
      allowEmptyValue: true
    ratelimit:
      name: ratelimit
      in: query
      description: |
        Get or set a variable bitrate limit.
      schema:
        type: string
        minimum: 0
        maximum: 65535
    quality:
      name: quality
      in: query
      description: The compression quality of the image
      schema:
        type: integer
        minimum: 1
        maximum: 21
    doublescan:
      name: doublescan
      in: query
      description: Effectively a boolean that determines whether or not the camera should delay image output until a new image is available.
      schema:
        type: integer
        minimum: 0
        maximum: 1
    ssn:
      name: ssn
      in: query
      description: |
        Stream identifier — distinguishes multiple streams from one another. Use a unique ssn for each stream with a unique image size, quality and/or frame rate. Each camera supports up to eight simultaneous non-identical streams. Each client must have a unique (ip:ssn)
      schema:
        type: integer
        minimum: 1
        maximum: 65535
    iframe:
      name: iframe
      in: query
      description: |
        Effectively a boolean (0 or 1). Set to 1 will force the camera to return an Intra frame (I-frame) with a corresponding SPS and PPS as an IDR slice, so that the stream is decodable from this point. When opening a new stream (as when changing the image size and/or frame rate) the I-frame is sent automatically regardless of the input value of `iframe`. To reduce the stream size, reduce the frequency of `iframe = 1` in requests. You can set the P-frames for any of the streams sent by the camera is set using
        one of the following HTTP commands :
        http://camera_ip/setreg?page=3&reg=21&val=(0..100)

        http://camera_ip/set?keyframeinterval=(0..100)
        When the on-camera counter of P-frames fills up, the camera will return an I-frame even if iframe in the request is set to 0. To find out whether an I-frame was received, check the HTTP Content Type.
      schema:
        type: integer
        maximum: 1
        minimum: 0
    bitrate:
      name: bitrate
      in: query
      description: |
        Sets a constant bitrate in kilobits per second. If this parameter is present in the request, the QP parameter is ignored, and the camera adjusts quantization parameters automatically to maintain the specified bitrate.
      schema:
        type: integer
        minimum: 1
        maximum: 65535
      allowEmptyValue: true
    intra_period:
      name: intra_period
      in: query
      description: |
        Valid when requesting a non-zero bitrate and periodically requesting `iframe=1`. Specifies the intra-frame period during which you are sending requests with `iframe=1`. If you do not specify `intra_period`, bitrate control will not function correctly unless the actual period of sending iframe=1 requests is the same as the number of P-frames specified in register 3:21 of the camera via one of the commands described above. If you do not request `iframe=1` at all, then the `intra_period` parameter is not required and bitrate control will rely on the number of P-frames set in register 3:21. 
      schema:
        type: integer
        minimum: 0
        maximum: 255
    fps:
      name: fps
      in: query
      description: Get or set the camera framerate. values over the camera's famerate will return the camera's maximum framerate (model dependent).
      schema:
        type: integer
        minimum: 0
        maximum: 30
      allowEmptyValue: true
    channel:
      name: channel
      in: query
      description: |
        If `upscaling=on`, use the channel parameter to retrieve color or monochrome images from the camera.
      schema:
        type: string
        enum:
          - color
          - mono
    keyframe:
      name: keyframe
      in: query
      description: |
        Get or set key frame setting. Yields an I-frame on the next available frame.
      schema:
        type: boolean
      allowEmptyValue: true
    keyframeinterval:
      name: keyframeinterval
      in: query
      description: |
        Get or set the key frame interval.

        * For non-4K models the maximum limit is 100
        * The numerical value in “set?keyframeinterval=(0…65535)” represents the P-frame count between two consecutive key frames (I-frames)
      schema:
        type: integer
        minimum: 0
        maximum: 200
        default: 50
      allowEmptyValue: true
    rtspport:
      name: rtspport
      in: query
      description: |
        Get or set the RTSP port.
      schema:
        type: integer
        minimum: 0
        maximum: 65535
        default: 554
      allowEmptyValue: true
    spacialfilter:
      name: spacialfilter
      in: query
      description: |
        Get or set the low-light noise filter.
      schema:
        type: integer
        minimum: 0
        maximum: 100
      allowEmptyValue: true
    name:
      name: name
      in: query
      description: |
        Get or set the camera name.
      schema:
        type: string
        minLength: 0
        maxLength: 32
      allowEmptyValue: true
    mtu:
      name: mtu
      in: query
      description: |
        Get or set the MTU size.
      schema:
        type: integer
        minimum: 512
        maximum: 1500
      allowEmptyValue: true
    ip:
      name: ip
      in: query
      description: |
        Get or set the camera's IP address.
      schema:
        type: string
        pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
      allowEmptyValue: true
    subnetmask:
      name: subnetmask
      in: query
      description: |
        Get or set the camera's subnet mask.
      schema:
        type: string
        pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
      allowEmptyValue: true
    gateway:
      name: gateway
      in: query
      description: |
        Get or set the camera's default gateway.
      schema:
        type: string
        pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
      allowEmptyValue: true
    eth_negotiation:
      name: eth_negotiation
      in: query
      description: |
        When set to auto, auto negotiation is enabled. Connected devices will first share their transmission capabilities, such as speed and duplex mode, and then choose the highest performance transmission mode they both support.

        When set to fixed, the camera uses a transmission speed of 100Mb and full duplex mode.
      schema:
        type: string
        enum:
          - auto
          - fixed
      allowEmptyValue: true
    features:
      name: features
      in: query
      description: |
        Returns an integer for enabled features. Integers that are not returned are not enabled.
      schema:
        type: integer
      allowEmptyValue: true
    audioinput:
      name: audioinput
      in: query
      description: |
        The source of audio input.
      schema:
        type: string
        enum:
          - mic
          - linein
      allowEmptyValue: true
    linein_volume:
      name: linein_volume
      in: query
      description: |
        Volume of line-in audio.
      schema:
        type: integer
        minimum: 0
        maximum: 45
      allowEmptyValue: true
    mic_boost:
      name: mic_boost
      in: query
      description: |
        Volume of microphone-in audio.
      schema:
        type: integer
        minimum: 0
        maximum: 2
      allowEmptyValue: true
    piris:
      name: piris
      in: query
      description: |
        Enable/disable P-iris
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    pirispos:
      name: pirispos
      in: query
      description: |
        The position P-iris closes to
      schema:
        type: integer
        minimum: 0
        maximum: 255
      allowEmptyValue: true
    equalbright:
      name: equalbright
      in: query
      description: |
        Equalize brightness across sensors in a multisensor camera.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    equalcolor:
      name: equalcolor
      in: query
      description: |
        Equalize color across sensors in a multisensor camera.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    vertical_alignment:
      name: vertical_alignment
      in: query
      description: |
        Align sensors in a multisensor camera.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    vertical_shift:
      name: vertical_shift
      in: query
      description: |
        Shift sensors vertically.
      schema:
        type: integer
      allowEmptyValue: true
    piris_ref_channel:
      name: piris_ref_channel
      in: query
      description: |
        Set the P-iris reference channel for a multi-channel camera.
      schema:
        type: integer
      allowEmptyValue: true
    exp_ref_channel:
      name: exp_ref_channel
      in: query
      description: |
        Set the exposure reference for a multi-channel camera.
      schema:
        oneOf:
          - type: integer
          - type: string
            enum: [off]
      allowEmptyValue: true
    ir:
      name: ir
      in: query
      description: |
        Infrafred light control. `on` enables IR in night mode; `alwayson` enables IR always.
      schema:
        type: string
        enum:
          - 'on'
          - alwayson
          - 'off'
      allowEmptyValue: true
    make:
      name: make
      in: query
      description: |
        Get the make of the camera.
      schema:
        type: string
      allowEmptyValue: true
    white_balance:
      name: white_balance
      in: query
      description: |
        White balance control.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    wbwndctrl:
      name: wbwndctrl
      in: query
      description: |
        White balance window control.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    wbwndleft:
      name: wbwndleft
      in: query
      description: |
        White balance window left start value. Maximum values depend on your sensor size.
      schema:
        type: integer
        minimum: 0
    wbwndtop:
      name: wbwndtop
      in: query
      description: |
        White balance window top start value. Maximum values depend on your sensor size.
      schema:
        type: integer
        minimum: 0
    wbwndwidth:
      name: wbwndwidth
      in: query
      description: |
        White balance window width, beginning from the `wbwndleft` value. Maximum values depend on your sensor size.
      schema:
        type: integer
        minimum: 0
    wbwndheight:
      name: wbwndheight
      in: query
      description: |
        White balance window height, beginning from the `wbwndtop` value. Maximum values depend on your sensor size.
      schema:
        type: integer
        minimum: 0
    ntpserver_ip:
      name: ntpserver_ip
      in: query
      description: |
        NTP server address.
      schema:
        type: string
        pattern: '^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'
      allowEmptyValue: true
    enclosure:
      name: enclosure
      in: query
      description: |
        Returns the camera's model name. Provide `code` to return the model type number.
      schema:
        type: string
        enum:
          - code
      allowEmptyValue: true
    gamma:
      name: gamma
      in: query
      description: |
        Gamma for single sensor and Surroundvideo1 cameras.
      schema:
        type: integer
        minimum: 0
        maximum: 100
      allowEmptyValue: true
    gamma2:
      name: gamma2
      in: query
      description: |
        Gamma for the second sensor in dual sensor cameras.
      schema:
        type: integer
        minimum: 0
        maximum: 100
      allowEmptyValue: true
    bandwidthsaving:
      name: bandwidthsaving
      in: query
      description: |
        Bandwidth saving mode settings.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    lowpower:
      name: lowpower
      in: query
      description: |
        Low power mode settings.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    motion_compensation:
      name: motion_compensation
      in: query
      description: |
        Motion compensation settings.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    adjustable_ir:
      name: adjustable_ir
      in: query
      description: |
        Adjustable IR light settings.
      schema:
        type: string
        enum:
          - adaptive
          - preset
          - disabled
      allowEmptyValue: true
    irwidepos:
      name: irwidepos
      in: query
      description: |
        The adjustable intensity of wide IR lights.
      schema:
        type: integer
        minimum: 0
        maximum: 7
      allowEmptyValue: true
    irtelepos:
      name: irtelpos
      in: query
      description: |
        The adjustable intensity of tele IR lights.
      schema:
        type: integer
        minimum: 0
        maximum: 7
      allowEmptyValue: true
    snapstream:
      name: snapstream
      in: query
      description: |
        Snapstream on/off setting.
      schema:
        type: string
        enum:
          - 'on'
          - 'off'
      allowEmptyValue: true
    sensorcount:
      name: sensorcount
      in: query
      description: |
        Returns the sensor count. Use the sensor count to determine the channels you want to get or set when 
      schema:
        type: integer
      allowEmptyValue: true